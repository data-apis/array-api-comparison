name,description,signature,url,numpy,numpy_url
"cupy.absolute = <ufunc 'cupy_absolute'>","Elementwise absolute value function.","cupy.absolute = <ufunc 'cupy_absolute'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.absolute.html#cupy.absolute","numpy.absolute","https://docs.scipy.org/doc/numpy/reference/generated/numpy.absolute.html#numpy.absolute"
"cupy.add = <ufunc 'cupy_add'>","Adds two arrays elementwise.","cupy.add = <ufunc 'cupy_add'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.add.html#cupy.add","numpy.add","https://docs.scipy.org/doc/numpy/reference/generated/numpy.add.html#numpy.add"
"cupy.all","Tests whether all array elements along a given axis evaluate to True.","cupy.all(a\, axis=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.all.html#cupy.all","numpy.all()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.all.html#numpy.all"
"cupy.allclose","Returns True if two arrays are element-wise equal within a tolerance.","cupy.allclose(a\, b\, rtol=1e-05\, atol=1e-08\, equal_nan=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.allclose.html#cupy.allclose","numpy.allclose()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.allclose.html#numpy.allclose"
"cupy.amax","Returns the maximum of an array or the maximum along an axis.","cupy.amax(a\, axis=None\, out=None\, keepdims=False\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.amax.html#cupy.amax","numpy.amax()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.amax.html#numpy.amax"
"cupy.amin","Returns the minimum of an array or the minimum along an axis.","cupy.amin(a\, axis=None\, out=None\, keepdims=False\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.amin.html#cupy.amin","numpy.amin()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.amin.html#numpy.amin"
"cupy.angle = <ufunc 'cupy_angle'>","Returns the angle of the complex argument.","cupy.angle = <ufunc 'cupy_angle'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.angle.html#cupy.angle","numpy.angle()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.angle.html#numpy.angle"
"cupy.any","Tests whether any array elements along a given axis evaluate to True.","cupy.any(a\, axis=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.any.html#cupy.any","numpy.any()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.any.html#numpy.any"
"cupy.arange","Returns an array with evenly spaced values within a given interval.","cupy.arange(start\, stop=None\, step=1\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.arange.html#cupy.arange","numpy.arange()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.arange.html#numpy.arange"
"cupy.arccos = <ufunc 'cupy_arccos'>","Elementwise inverse-cosine function (a.k.a. arccosine function).","cupy.arccos = <ufunc 'cupy_arccos'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.arccos.html#cupy.arccos","numpy.arccos","https://docs.scipy.org/doc/numpy/reference/generated/numpy.arccos.html#numpy.arccos"
"cupy.arccosh = <ufunc 'cupy_arccosh'>","Elementwise inverse of hyperbolic cosine function.","cupy.arccosh = <ufunc 'cupy_arccosh'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.arccosh.html#cupy.arccosh","numpy.arccosh","https://docs.scipy.org/doc/numpy/reference/generated/numpy.arccosh.html#numpy.arccosh"
"cupy.arcsin = <ufunc 'cupy_arcsin'>","Elementwise inverse-sine function (a.k.a. arcsine function).","cupy.arcsin = <ufunc 'cupy_arcsin'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.arcsin.html#cupy.arcsin","numpy.arcsin","https://docs.scipy.org/doc/numpy/reference/generated/numpy.arcsin.html#numpy.arcsin"
"cupy.arcsinh = <ufunc 'cupy_arcsinh'>","Elementwise inverse of hyperbolic sine function.","cupy.arcsinh = <ufunc 'cupy_arcsinh'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.arcsinh.html#cupy.arcsinh","numpy.arcsinh","https://docs.scipy.org/doc/numpy/reference/generated/numpy.arcsinh.html#numpy.arcsinh"
"cupy.arctan = <ufunc 'cupy_arctan'>","Elementwise inverse-tangent function (a.k.a. arctangent function).","cupy.arctan = <ufunc 'cupy_arctan'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.arctan.html#cupy.arctan","numpy.arctan","https://docs.scipy.org/doc/numpy/reference/generated/numpy.arctan.html#numpy.arctan"
"cupy.arctan2 = <ufunc 'cupy_arctan2'>","Elementwise inverse-tangent of the ratio of two arrays.","cupy.arctan2 = <ufunc 'cupy_arctan2'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.arctan2.html#cupy.arctan2","numpy.arctan2","https://docs.scipy.org/doc/numpy/reference/generated/numpy.arctan2.html#numpy.arctan2"
"cupy.arctanh = <ufunc 'cupy_arctanh'>","Elementwise inverse of hyperbolic tangent function.","cupy.arctanh = <ufunc 'cupy_arctanh'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.arctanh.html#cupy.arctanh","numpy.arctanh","https://docs.scipy.org/doc/numpy/reference/generated/numpy.arctanh.html#numpy.arctanh"
"cupy.argmax","Returns the indices of the maximum along an axis.","cupy.argmax(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.argmax.html#cupy.argmax","numpy.argmax()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.argmax.html#numpy.argmax"
"cupy.argmin","Returns the indices of the minimum along an axis.","cupy.argmin(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.argmin.html#cupy.argmin","numpy.argmin()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.argmin.html#numpy.argmin"
"cupy.argpartition","Returns the indices that would partially sort an array.","cupy.argpartition(a\, kth\, axis=-1)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.argpartition.html#cupy.argpartition","numpy.argpartition()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.argpartition.html#numpy.argpartition"
"cupy.argsort","Returns the indices that would sort an array with a stable sorting.","cupy.argsort(a\, axis=-1)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.argsort.html#cupy.argsort","numpy.argsort()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.argsort.html#numpy.argsort"
"cupy.around","Rounds to the given number of decimals.","cupy.around(a\, decimals=0\, out=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.around.html#cupy.around","numpy.around()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.around.html#numpy.around"
"cupy.array","Creates an array on the current device.","cupy.array(obj\, dtype=None\, copy=True\, order='K'\, subok=False\, ndmin=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.array.html#cupy.array","numpy.array()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy.array"
"cupy.array_repr","Returns the string representation of an array.","cupy.array_repr(arr\, max_line_width=None\, precision=None\, suppress_small=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.array_repr.html#cupy.array_repr","numpy.array_repr()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.array_repr.html#numpy.array_repr"
"cupy.array_split","Splits an array into multiple sub arrays along a given axis.","cupy.array_split(ary\, indices_or_sections\, axis=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.array_split.html#cupy.array_split","numpy.array_split()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.array_split.html#numpy.array_split"
"cupy.array_str","Returns the string representation of the content of an array.","cupy.array_str(arr\, max_line_width=None\, precision=None\, suppress_small=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.array_str.html#cupy.array_str","numpy.array_str()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.array_str.html#numpy.array_str"
"cupy.asanyarray","Converts an object to array.","cupy.asanyarray(a\, dtype=None\, order=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.asanyarray.html#cupy.asanyarray","numpy.asanyarray()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.asanyarray.html#numpy.asanyarray"
"cupy.asarray","Converts an object to array.","cupy.asarray(a\, dtype=None\, order=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.asarray.html#cupy.asarray","numpy.asarray()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.asarray.html#numpy.asarray"
"cupy.ascontiguousarray","Returns a C-contiguous array.","cupy.ascontiguousarray(a\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.ascontiguousarray.html#cupy.ascontiguousarray","numpy.ascontiguousarray()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.ascontiguousarray.html#numpy.ascontiguousarray"
"cupy.asfortranarray","Return an array laid out in Fortran order in memory.","cupy.asfortranarray(a\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.asfortranarray.html#cupy.asfortranarray","numpy.asfortranarray()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.asfortranarray.html#numpy.asfortranarray"
"cupy.asnumpy","Returns an array on the host memory from an arbitrary source array.","cupy.asnumpy(a\, stream=None\, order='C')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.asnumpy.html#cupy.asnumpy","",""
"cupy.atleast_1d","Converts arrays to arrays with dimensions >= 1.","cupy.atleast_1d(*arys)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.atleast_1d.html#cupy.atleast_1d","numpy.atleast_1d()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.atleast_1d.html#numpy.atleast_1d"
"cupy.atleast_2d","Converts arrays to arrays with dimensions >= 2.","cupy.atleast_2d(*arys)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.atleast_2d.html#cupy.atleast_2d","numpy.atleast_2d()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.atleast_2d.html#numpy.atleast_2d"
"cupy.atleast_3d","Converts arrays to arrays with dimensions >= 3.","cupy.atleast_3d(*arys)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.atleast_3d.html#cupy.atleast_3d","numpy.atleast_3d()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.atleast_3d.html#numpy.atleast_3d"
"cupy.average","Returns the weighted average along an axis.","cupy.average(a\, axis=None\, weights=None\, returned=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.average.html#cupy.average","numpy.average()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.average.html#numpy.average"
"cupy.base_repr","Return a string representation of a number in the given base system.","cupy.base_repr(number\, base=2\, padding=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.base_repr.html#cupy.base_repr","numpy.base_repr()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.base_repr.html#numpy.base_repr"
"cupy.binary_repr","Return the binary representation of the input number as a string.","cupy.binary_repr(num\, width=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.binary_repr.html#cupy.binary_repr","numpy.binary_repr()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.binary_repr.html#numpy.binary_repr"
"cupy.bincount","Count number of occurrences of each value in array of non-negative ints.","cupy.bincount(x\, weights=None\, minlength=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.bincount.html#cupy.bincount","numpy.bincount()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.bincount.html#numpy.bincount"
"cupy.bitwise_and = <ufunc 'cupy_bitwise_and'>","Computes the bitwise AND of two arrays elementwise.","cupy.bitwise_and = <ufunc 'cupy_bitwise_and'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.bitwise_and.html#cupy.bitwise_and","numpy.bitwise_and","https://docs.scipy.org/doc/numpy/reference/generated/numpy.bitwise_and.html#numpy.bitwise_and"
"cupy.bitwise_or = <ufunc 'cupy_bitwise_or'>","Computes the bitwise OR of two arrays elementwise.","cupy.bitwise_or = <ufunc 'cupy_bitwise_or'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.bitwise_or.html#cupy.bitwise_or","numpy.bitwise_or","https://docs.scipy.org/doc/numpy/reference/generated/numpy.bitwise_or.html#numpy.bitwise_or"
"cupy.bitwise_xor = <ufunc 'cupy_bitwise_xor'>","Computes the bitwise XOR of two arrays elementwise.","cupy.bitwise_xor = <ufunc 'cupy_bitwise_xor'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.bitwise_xor.html#cupy.bitwise_xor","numpy.bitwise_xor","https://docs.scipy.org/doc/numpy/reference/generated/numpy.bitwise_xor.html#numpy.bitwise_xor"
"cupy.blackman","Returns the Blackman window.","cupy.blackman(M)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.blackman.html#cupy.blackman","numpy.blackman()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.blackman.html#numpy.blackman"
"cupy.broadcast_arrays","Broadcasts given arrays.","cupy.broadcast_arrays(*args)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.broadcast_arrays.html#cupy.broadcast_arrays","numpy.broadcast_arrays()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.broadcast_arrays.html#numpy.broadcast_arrays"
"cupy.broadcast_to","Broadcast an array to a given shape.","cupy.broadcast_to(array\, shape)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.broadcast_to.html#cupy.broadcast_to","numpy.broadcast_to()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.broadcast_to.html#numpy.broadcast_to"
"cupy.can_cast","Returns True if cast between data types can occur according to the casting rule. If from is a scalar or array scalar\, also returns True if the scalar value can be cast without overflow or truncation to an integer.","cupy.can_cast(from_\, to\, casting='safe')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.can_cast.html#cupy.can_cast","numpy.can_cast()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.can_cast.html#numpy.can_cast"
"cupy.cbrt = <ufunc 'cupy_cbrt'>","Elementwise cube root function.","cupy.cbrt = <ufunc 'cupy_cbrt'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.cbrt.html#cupy.cbrt","numpy.cbrt","https://docs.scipy.org/doc/numpy/reference/generated/numpy.cbrt.html#numpy.cbrt"
"cupy.ceil = <ufunc 'cupy_ceil'>","Rounds each element of an array to its ceiling integer.","cupy.ceil = <ufunc 'cupy_ceil'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.ceil.html#cupy.ceil","numpy.ceil","https://docs.scipy.org/doc/numpy/reference/generated/numpy.ceil.html#numpy.ceil"
"cupy.clear_memo","Clears the memoized results for all functions decorated by memoize.","cupy.clear_memo()","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.clear_memo.html#cupy.clear_memo","",""
"cupy.clip","Clips the values of an array to a given interval.","cupy.clip(a\, a_min=None\, a_max=None\, out=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.clip.html#cupy.clip","numpy.clip()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.clip.html#numpy.clip"
"cupy.column_stack","Stacks 1-D and 2-D arrays as columns into a 2-D array.","cupy.column_stack(tup)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.column_stack.html#cupy.column_stack","numpy.column_stack()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.column_stack.html#numpy.column_stack"
"cupy.common_type","Return a scalar type which is common to the input arrays.","cupy.common_type(*arrays)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.common_type.html#cupy.common_type","numpy.common_type()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.common_type.html#numpy.common_type"
"cupy.concatenate","Joins arrays along an axis.","cupy.concatenate(tup\, axis=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.concatenate.html#cupy.concatenate","numpy.concatenate()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.concatenate.html#numpy.concatenate"
"cupy.conj = <ufunc 'cupy_conj'>","Returns the complex conjugate\, element-wise.","cupy.conj = <ufunc 'cupy_conj'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.conj.html#cupy.conj","numpy.conj","https://docs.scipy.org/doc/numpy/reference/generated/numpy.conj.html#numpy.conj"
"cupy.copy","Creates a copy of a given array on the current device.","cupy.copy(a\, order='K')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.copy.html#cupy.copy","",""
"cupy.copysign = <ufunc 'cupy_copysign'>","Returns the first argument with the sign bit of the second elementwise.","cupy.copysign = <ufunc 'cupy_copysign'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.copysign.html#cupy.copysign","numpy.copysign","https://docs.scipy.org/doc/numpy/reference/generated/numpy.copysign.html#numpy.copysign"
"cupy.copyto","Copies values from one array to another with broadcasting.","cupy.copyto(dst\, src\, casting='same_kind'\, where=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.copyto.html#cupy.copyto","numpy.copyto()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.copyto.html#numpy.copyto"
"cupy.corrcoef","Returns the Pearson product-moment correlation coefficients of an array.","cupy.corrcoef(a\, y=None\, rowvar=True\, bias=None\, ddof=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.corrcoef.html#cupy.corrcoef","numpy.corrcoef()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.corrcoef.html#numpy.corrcoef"
"cupy.cos = <ufunc 'cupy_cos'>","Elementwise cosine function.","cupy.cos = <ufunc 'cupy_cos'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.cos.html#cupy.cos","numpy.cos","https://docs.scipy.org/doc/numpy/reference/generated/numpy.cos.html#numpy.cos"
"cupy.cosh = <ufunc 'cupy_cosh'>","Elementwise hyperbolic cosine function.","cupy.cosh = <ufunc 'cupy_cosh'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.cosh.html#cupy.cosh","numpy.cosh","https://docs.scipy.org/doc/numpy/reference/generated/numpy.cosh.html#numpy.cosh"
"cupy.count_nonzero","Counts the number of non-zero values in the array.","cupy.count_nonzero(a\, axis=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.count_nonzero.html#cupy.count_nonzero","",""
"cupy.cov","Returns the covariance matrix of an array.","cupy.cov(a\, y=None\, rowvar=True\, bias=False\, ddof=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.cov.html#cupy.cov","numpy.cov()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.cov.html#numpy.cov"
"cupy.cross","Returns the cross product of two vectors.","cupy.cross(a\, b\, axisa=-1\, axisb=-1\, axisc=-1\, axis=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.cross.html#cupy.cross","numpy.cross()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.cross.html#numpy.cross"
"cupy.cumprod","Returns the cumulative product of an array along a given axis.","cupy.cumprod(a\, axis=None\, dtype=None\, out=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.cumprod.html#cupy.cumprod","numpy.cumprod()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.cumprod.html#numpy.cumprod"
"cupy.cumsum","Returns the cumulative sum of an array along a given axis.","cupy.cumsum(a\, axis=None\, dtype=None\, out=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.cumsum.html#cupy.cumsum","numpy.cumsum()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.cumsum.html#numpy.cumsum"
"cupy.deg2rad = <ufunc 'cupy_deg2rad'>","Converts angles from degrees to radians elementwise.","cupy.deg2rad = <ufunc 'cupy_deg2rad'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.deg2rad.html#cupy.deg2rad","numpy.deg2rad","https://docs.scipy.org/doc/numpy/reference/generated/numpy.deg2rad.html#numpy.deg2rad"
"cupy.degrees = <ufunc 'cupy_rad2deg'>","Converts angles from radians to degrees elementwise.","cupy.degrees = <ufunc 'cupy_rad2deg'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.degrees.html#cupy.degrees","numpy.degrees","https://docs.scipy.org/doc/numpy/reference/generated/numpy.degrees.html#numpy.degrees"
"cupy.diag","Returns a diagonal or a diagonal array.","cupy.diag(v\, k=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.diag.html#cupy.diag","numpy.diag()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.diag.html#numpy.diag"
"cupy.diagflat","Creates a diagonal array from the flattened input.","cupy.diagflat(v\, k=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.diagflat.html#cupy.diagflat","",""
"cupy.diagonal","Returns specified diagonals.","cupy.diagonal(a\, offset=0\, axis1=0\, axis2=1)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.diagonal.html#cupy.diagonal","numpy.diagonal()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.diagonal.html#numpy.diagonal"
"cupy.diff","Calculate the n-th discrete difference along the given axis.","cupy.diff(a\, n=1\, axis=-1\, prepend=None\, append=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.diff.html#cupy.diff","numpy.diff()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.diff.html#numpy.diff"
"cupy.divide = <ufunc 'cupy_true_divide'>","Elementwise true division (i.e. division as floating values).","cupy.divide = <ufunc 'cupy_true_divide'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.divide.html#cupy.divide","",""
"cupy.dot","Returns a dot product of two arrays.","cupy.dot(a\, b\, out=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.dot.html#cupy.dot","numpy.dot()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.dot.html#numpy.dot"
"cupy.dsplit","Splits an array into multiple sub arrays along the third axis.","cupy.dsplit(ary\, indices_or_sections)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.dsplit.html#cupy.dsplit","numpy.dsplit()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.dsplit.html#numpy.dsplit"
"cupy.dstack","Stacks arrays along the third axis.","cupy.dstack(tup)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.dstack.html#cupy.dstack","numpy.dstack()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.dstack.html#numpy.dstack"
"cupy.einsum","Evaluates the Einstein summation convention on the operands. Using the Einstein summation convention\, many common multi-dimensional array operations can be represented in a simple fashion. This function provides a way to compute such summations.","cupy.einsum(subscripts\, *operands\, dtype=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.einsum.html#cupy.einsum","numpy.einsum()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.einsum.html#numpy.einsum"
"cupy.empty","Returns an array without initializing the elements.","cupy.empty(shape\, dtype=<class 'float'>\, order='C')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.empty.html#cupy.empty","numpy.empty()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.empty.html#numpy.empty"
"cupy.empty_like","Returns a new array with same shape and dtype of a given array.","cupy.empty_like(a\, dtype=None\, order='K'\, subok=None\, shape=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.empty_like.html#cupy.empty_like","numpy.empty_like()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.empty_like.html#numpy.empty_like"
"cupy.equal = <ufunc 'cupy_equal'>","Tests elementwise if x1 == x2.","cupy.equal = <ufunc 'cupy_equal'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.equal.html#cupy.equal","numpy.equal","https://docs.scipy.org/doc/numpy/reference/generated/numpy.equal.html#numpy.equal"
"cupy.exp = <ufunc 'cupy_exp'>","Elementwise exponential function.","cupy.exp = <ufunc 'cupy_exp'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.exp.html#cupy.exp","numpy.exp","https://docs.scipy.org/doc/numpy/reference/generated/numpy.exp.html#numpy.exp"
"cupy.exp2 = <ufunc 'cupy_exp2'>","Elementwise exponentiation with base 2.","cupy.exp2 = <ufunc 'cupy_exp2'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.exp2.html#cupy.exp2","numpy.exp2","https://docs.scipy.org/doc/numpy/reference/generated/numpy.exp2.html#numpy.exp2"
"cupy.expand_dims","Expands given arrays.","cupy.expand_dims(a\, axis)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.expand_dims.html#cupy.expand_dims","numpy.expand_dims()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.expand_dims.html#numpy.expand_dims"
"cupy.expm1 = <ufunc 'cupy_expm1'>","Computes exp(x) - 1 elementwise.","cupy.expm1 = <ufunc 'cupy_expm1'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.expm1.html#cupy.expm1","numpy.expm1","https://docs.scipy.org/doc/numpy/reference/generated/numpy.expm1.html#numpy.expm1"
"cupy.eye","Returns a 2-D array with ones on the diagonals and zeros elsewhere.","cupy.eye(N\, M=None\, k=0\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.eye.html#cupy.eye","numpy.eye()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.eye.html#numpy.eye"
"cupy.fft.fft","Compute the one-dimensional FFT.","cupy.fft.fft(a\, n=None\, axis=-1\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.fft.html#cupy.fft.fft","numpy.fft.fft()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fft.html#numpy.fft.fft"
"cupy.fft.fft2","Compute the two-dimensional FFT.","cupy.fft.fft2(a\, s=None\, axes=(-2\, -1)\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.fft2.html#cupy.fft.fft2","numpy.fft.fft2()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fft2.html#numpy.fft.fft2"
"cupy.fft.fftfreq","Return the FFT sample frequencies.","cupy.fft.fftfreq(n\, d=1.0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.fftfreq.html#cupy.fft.fftfreq","numpy.fft.fftfreq()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftfreq.html#numpy.fft.fftfreq"
"cupy.fft.fftn","Compute the N-dimensional FFT.","cupy.fft.fftn(a\, s=None\, axes=None\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.fftn.html#cupy.fft.fftn","numpy.fft.fftn()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftn.html#numpy.fft.fftn"
"cupy.fft.fftshift","Shift the zero-frequency component to the center of the spectrum.","cupy.fft.fftshift(x\, axes=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.fftshift.html#cupy.fft.fftshift","numpy.fft.fftshift()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html#numpy.fft.fftshift"
"cupy.fft.hfft","Compute the FFT of a signal that has Hermitian symmetry.","cupy.fft.hfft(a\, n=None\, axis=-1\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.hfft.html#cupy.fft.hfft","numpy.fft.hfft()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.hfft.html#numpy.fft.hfft"
"cupy.fft.ifft","Compute the one-dimensional inverse FFT.","cupy.fft.ifft(a\, n=None\, axis=-1\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.ifft.html#cupy.fft.ifft","numpy.fft.ifft()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifft.html#numpy.fft.ifft"
"cupy.fft.ifft2","Compute the two-dimensional inverse FFT.","cupy.fft.ifft2(a\, s=None\, axes=(-2\, -1)\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.ifft2.html#cupy.fft.ifft2","numpy.fft.ifft2()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifft2.html#numpy.fft.ifft2"
"cupy.fft.ifftn","Compute the N-dimensional inverse FFT.","cupy.fft.ifftn(a\, s=None\, axes=None\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.ifftn.html#cupy.fft.ifftn","numpy.fft.ifftn()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftn.html#numpy.fft.ifftn"
"cupy.fft.ifftshift","The inverse of fftshift().","cupy.fft.ifftshift(x\, axes=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.ifftshift.html#cupy.fft.ifftshift","numpy.fft.ifftshift()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html#numpy.fft.ifftshift"
"cupy.fft.ihfft","Compute the FFT of a signal that has Hermitian symmetry.","cupy.fft.ihfft(a\, n=None\, axis=-1\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.ihfft.html#cupy.fft.ihfft","numpy.fft.ihfft()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ihfft.html#numpy.fft.ihfft"
"cupy.fft.irfft","Compute the one-dimensional inverse FFT for real input.","cupy.fft.irfft(a\, n=None\, axis=-1\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.irfft.html#cupy.fft.irfft","numpy.fft.irfft()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.irfft.html#numpy.fft.irfft"
"cupy.fft.irfft2","Compute the two-dimensional inverse FFT for real input.","cupy.fft.irfft2(a\, s=None\, axes=(-2\, -1)\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.irfft2.html#cupy.fft.irfft2","numpy.fft.irfft2()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.irfft2.html#numpy.fft.irfft2"
"cupy.fft.irfftn","Compute the N-dimensional inverse FFT for real input.","cupy.fft.irfftn(a\, s=None\, axes=None\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.irfftn.html#cupy.fft.irfftn","numpy.fft.irfftn()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.irfftn.html#numpy.fft.irfftn"
"cupy.fft.rfft","Compute the one-dimensional FFT for real input.","cupy.fft.rfft(a\, n=None\, axis=-1\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.rfft.html#cupy.fft.rfft","numpy.fft.rfft()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.rfft.html#numpy.fft.rfft"
"cupy.fft.rfft2","Compute the two-dimensional FFT for real input.","cupy.fft.rfft2(a\, s=None\, axes=(-2\, -1)\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.rfft2.html#cupy.fft.rfft2","numpy.fft.rfft2()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.rfft2.html#numpy.fft.rfft2"
"cupy.fft.rfftfreq","Return the FFT sample frequencies for real input.","cupy.fft.rfftfreq(n\, d=1.0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.rfftfreq.html#cupy.fft.rfftfreq","numpy.fft.rfftfreq()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.rfftfreq.html#numpy.fft.rfftfreq"
"cupy.fft.rfftn","Compute the N-dimensional FFT for real input.","cupy.fft.rfftn(a\, s=None\, axes=None\, norm=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fft.rfftn.html#cupy.fft.rfftn","numpy.fft.rfftn()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.rfftn.html#numpy.fft.rfftn"
"cupy.fill_diagonal","Fills the main diagonal of the given array of any dimensionality.","cupy.fill_diagonal(a\, val\, wrap=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fill_diagonal.html#cupy.fill_diagonal","numpy.fill_diagonal()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fill_diagonal.html#numpy.fill_diagonal"
"cupy.fix = <ufunc 'cupy_fix'>","If given value x is positive\, it return floor(x). Else\, it return ceil(x).","cupy.fix = <ufunc 'cupy_fix'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fix.html#cupy.fix","numpy.fix()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fix.html#numpy.fix"
"cupy.flatnonzero","Return indices that are non-zero in the flattened version of a.","cupy.flatnonzero(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.flatnonzero.html#cupy.flatnonzero","numpy.flatnonzero()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.flatnonzero.html#numpy.flatnonzero"
"cupy.flip","Reverse the order of elements in an array along the given axis.","cupy.flip(a\, axis)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.flip.html#cupy.flip","numpy.flip()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.flip.html#numpy.flip"
"cupy.fliplr","Flip array in the left/right direction.","cupy.fliplr(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fliplr.html#cupy.fliplr","numpy.fliplr()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fliplr.html#numpy.fliplr"
"cupy.flipud","Flip array in the up/down direction.","cupy.flipud(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.flipud.html#cupy.flipud","numpy.flipud()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.flipud.html#numpy.flipud"
"cupy.floor = <ufunc 'cupy_floor'>","Rounds each element of an array to its floor integer.","cupy.floor = <ufunc 'cupy_floor'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.floor.html#cupy.floor","numpy.floor","https://docs.scipy.org/doc/numpy/reference/generated/numpy.floor.html#numpy.floor"
"cupy.floor_divide = <ufunc 'cupy_floor_divide'>","Elementwise floor division (i.e. integer quotient).","cupy.floor_divide = <ufunc 'cupy_floor_divide'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.floor_divide.html#cupy.floor_divide","numpy.floor_divide","https://docs.scipy.org/doc/numpy/reference/generated/numpy.floor_divide.html#numpy.floor_divide"
"cupy.fmax = <ufunc 'cupy_fmax'>","Takes the maximum of two arrays elementwise.","cupy.fmax = <ufunc 'cupy_fmax'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fmax.html#cupy.fmax","numpy.fmax","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fmax.html#numpy.fmax"
"cupy.fmin = <ufunc 'cupy_fmin'>","Takes the minimum of two arrays elementwise.","cupy.fmin = <ufunc 'cupy_fmin'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fmin.html#cupy.fmin","numpy.fmin","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fmin.html#numpy.fmin"
"cupy.fmod = <ufunc 'cupy_fmod'>","Computes the remainder of C division elementwise.","cupy.fmod = <ufunc 'cupy_fmod'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fmod.html#cupy.fmod","numpy.fmod","https://docs.scipy.org/doc/numpy/reference/generated/numpy.fmod.html#numpy.fmod"
"cupy.frexp = <ufunc 'cupy_frexp'>","Decomposes each element to mantissa and two’s exponent.","cupy.frexp = <ufunc 'cupy_frexp'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.frexp.html#cupy.frexp","numpy.frexp","https://docs.scipy.org/doc/numpy/reference/generated/numpy.frexp.html#numpy.frexp"
"cupy.fromDlpack","Zero-copy conversion from a DLPack tensor to a ndarray.","cupy.fromDlpack(dltensor) → ndarray","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fromDlpack.html#cupy.fromDlpack","",""
"cupy.full","Returns a new array of given shape and dtype\, filled with a given value.","cupy.full(shape\, fill_value\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.full.html#cupy.full","numpy.full()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.full.html#numpy.full"
"cupy.full_like","Returns a full array with same shape and dtype as a given array.","cupy.full_like(a\, fill_value\, dtype=None\, order='K'\, subok=None\, shape=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.full_like.html#cupy.full_like","numpy.full_like()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.full_like.html#numpy.full_like"
"cupy.fuse","Decorator that fuses a function.","cupy.fuse(*args\, **kwargs)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.fuse.html#cupy.fuse","",""
"cupy.get_array_module","Returns the array module for arguments.","cupy.get_array_module(*args)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.get_array_module.html#cupy.get_array_module","",""
"cupy.get_default_memory_pool","Returns CuPy default memory pool for GPU memory.","cupy.get_default_memory_pool()","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.get_default_memory_pool.html#cupy.get_default_memory_pool","",""
"cupy.get_default_pinned_memory_pool","Returns CuPy default memory pool for pinned memory.","cupy.get_default_pinned_memory_pool()","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.get_default_pinned_memory_pool.html#cupy.get_default_pinned_memory_pool","",""
"cupy.greater = <ufunc 'cupy_greater'>","Tests elementwise if x1 > x2.","cupy.greater = <ufunc 'cupy_greater'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.greater.html#cupy.greater","numpy.greater","https://docs.scipy.org/doc/numpy/reference/generated/numpy.greater.html#numpy.greater"
"cupy.greater_equal = <ufunc 'cupy_greater_equal'>","Tests elementwise if x1 >= x2.","cupy.greater_equal = <ufunc 'cupy_greater_equal'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.greater_equal.html#cupy.greater_equal","numpy.greater_equal","https://docs.scipy.org/doc/numpy/reference/generated/numpy.greater_equal.html#numpy.greater_equal"
"cupy.hamming","Returns the Hamming window.","cupy.hamming(M)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.hamming.html#cupy.hamming","numpy.hamming()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.hamming.html#numpy.hamming"
"cupy.hanning","Returns the Hanning window.","cupy.hanning(M)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.hanning.html#cupy.hanning","numpy.hanning()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.hanning.html#numpy.hanning"
"cupy.histogram","Computes the histogram of a set of data.","cupy.histogram(x\, bins=10)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.histogram.html#cupy.histogram","numpy.histogram()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.histogram.html#numpy.histogram"
"cupy.hsplit","Splits an array into multiple sub arrays horizontally.","cupy.hsplit(ary\, indices_or_sections)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.hsplit.html#cupy.hsplit","numpy.hsplit()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.hsplit.html#numpy.hsplit"
"cupy.hstack","Stacks arrays horizontally.","cupy.hstack(tup)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.hstack.html#cupy.hstack","numpy.hstack()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.hstack.html#numpy.hstack"
"cupy.hypot = <ufunc 'cupy_hypot'>","Computes the hypoteneous of orthogonal vectors of given length.","cupy.hypot = <ufunc 'cupy_hypot'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.hypot.html#cupy.hypot","numpy.hypot","https://docs.scipy.org/doc/numpy/reference/generated/numpy.hypot.html#numpy.hypot"
"cupy.i0 = <ufunc 'cupy_i0'>","Modified Bessel function of the first kind\, order 0.","cupy.i0 = <ufunc 'cupy_i0'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.i0.html#cupy.i0","numpy.i0()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.i0.html#numpy.i0"
"cupy.identity","Returns a 2-D identity array.","cupy.identity(n\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.identity.html#cupy.identity","numpy.identity()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.identity.html#numpy.identity"
"cupy.imag","Returns the imaginary part of the elements of the array.","cupy.imag(val)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.imag.html#cupy.imag","numpy.imag()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.imag.html#numpy.imag"
"cupy.in1d","Tests whether each element of a 1-D array is also present in a second array.","cupy.in1d(ar1\, ar2\, assume_unique=False\, invert=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.in1d.html#cupy.in1d","",""
"cupy.indices","Returns an array representing the indices of a grid.","cupy.indices(dimensions\, dtype=<class 'int'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.indices.html#cupy.indices","numpy.indices()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.indices.html#numpy.indices"
"cupy.inner","Returns the inner product of two arrays.","cupy.inner(a\, b)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.inner.html#cupy.inner","numpy.inner()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.inner.html#numpy.inner"
"cupy.invert = <ufunc 'cupy_invert'>","Computes the bitwise NOT of an array elementwise.","cupy.invert = <ufunc 'cupy_invert'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.invert.html#cupy.invert","numpy.invert","https://docs.scipy.org/doc/numpy/reference/generated/numpy.invert.html#numpy.invert"
"cupy.isclose","Returns a boolean array where two arrays are equal within a tolerance.","cupy.isclose(a\, b\, rtol=1e-05\, atol=1e-08\, equal_nan=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isclose.html#cupy.isclose","numpy.isclose()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.isclose.html#numpy.isclose"
"cupy.iscomplex","Returns a bool array\, where True if input element is complex.","cupy.iscomplex(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.iscomplex.html#cupy.iscomplex","",""
"cupy.iscomplexobj","Check for a complex type or an array of complex numbers.","cupy.iscomplexobj(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.iscomplexobj.html#cupy.iscomplexobj","",""
"cupy.isfinite = <ufunc 'cupy_isfinite'>","Tests finiteness elementwise.","cupy.isfinite = <ufunc 'cupy_isfinite'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isfinite.html#cupy.isfinite","numpy.isfinite","https://docs.scipy.org/doc/numpy/reference/generated/numpy.isfinite.html#numpy.isfinite"
"cupy.isfortran","Returns True if the array is Fortran contiguous but not C contiguous.","cupy.isfortran(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isfortran.html#cupy.isfortran","isfortran()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.isfortran.html#numpy.isfortran"
"cupy.isin","Calculates element in test_elements\, broadcasting over element only. Returns a boolean array of the same shape as element that is True where an element of element is in test_elements and False otherwise.","cupy.isin(element\, test_elements\, assume_unique=False\, invert=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isin.html#cupy.isin","",""
"cupy.isinf = <ufunc 'cupy_isinf'>","Tests if each element is the positive or negative infinity.","cupy.isinf = <ufunc 'cupy_isinf'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isinf.html#cupy.isinf","numpy.isinf","https://docs.scipy.org/doc/numpy/reference/generated/numpy.isinf.html#numpy.isinf"
"cupy.isnan = <ufunc 'cupy_isnan'>","Tests if each element is a NaN.","cupy.isnan = <ufunc 'cupy_isnan'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isnan.html#cupy.isnan","numpy.isnan","https://docs.scipy.org/doc/numpy/reference/generated/numpy.isnan.html#numpy.isnan"
"cupy.isreal","Returns a bool array\, where True if input element is real.","cupy.isreal(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isreal.html#cupy.isreal","",""
"cupy.isrealobj","Return True if x is a not complex type or an array of complex numbers.","cupy.isrealobj(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isrealobj.html#cupy.isrealobj","",""
"cupy.isscalar","Returns True if the type of num is a scalar type.","cupy.isscalar(num)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.isscalar.html#cupy.isscalar","numpy.isscalar()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.isscalar.html#numpy.isscalar"
"cupy.ix_","Construct an open mesh from multiple sequences.","cupy.ix_(*args)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.ix_.html#cupy.ix_","numpy.ix_()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.ix_.html#numpy.ix_"
"cupy.kron","Returns the kronecker product of two arrays.","cupy.kron(a\, b)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.kron.html#cupy.kron","numpy.kron()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.kron.html#numpy.kron"
"cupy.ldexp = <ufunc 'cupy_ldexp'>","Computes x1 * 2 ** x2 elementwise.","cupy.ldexp = <ufunc 'cupy_ldexp'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.ldexp.html#cupy.ldexp","numpy.ldexp","https://docs.scipy.org/doc/numpy/reference/generated/numpy.ldexp.html#numpy.ldexp"
"cupy.left_shift = <ufunc 'cupy_left_shift'>","Shifts the bits of each integer element to the left.","cupy.left_shift = <ufunc 'cupy_left_shift'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.left_shift.html#cupy.left_shift","numpy.left_shift","https://docs.scipy.org/doc/numpy/reference/generated/numpy.left_shift.html#numpy.left_shift"
"cupy.less = <ufunc 'cupy_less'>","Tests elementwise if x1 < x2.","cupy.less = <ufunc 'cupy_less'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.less.html#cupy.less","numpy.less","https://docs.scipy.org/doc/numpy/reference/generated/numpy.less.html#numpy.less"
"cupy.less_equal = <ufunc 'cupy_less_equal'>","Tests elementwise if x1 <= x2.","cupy.less_equal = <ufunc 'cupy_less_equal'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.less_equal.html#cupy.less_equal","numpy.less_equal","https://docs.scipy.org/doc/numpy/reference/generated/numpy.less_equal.html#numpy.less_equal"
"cupy.lexsort","Perform an indirect sort using an array of keys.","cupy.lexsort(keys)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.lexsort.html#cupy.lexsort","numpy.lexsort()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.lexsort.html#numpy.lexsort"
"cupy.lib.stride_tricks.as_strided","Create a view into the array with the given shape and strides.","cupy.lib.stride_tricks.as_strided(x\, shape=None\, strides=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.lib.stride_tricks.as_strided.html#cupy.lib.stride_tricks.as_strided","numpy.lib.stride_tricks.as_strided()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.lib.stride_tricks.as_strided.html#numpy.lib.stride_tricks.as_strided"
"cupy.linalg.cholesky","Cholesky decomposition.","cupy.linalg.cholesky(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.cholesky.html#cupy.linalg.cholesky","numpy.linalg.cholesky()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.cholesky.html#numpy.linalg.cholesky"
"cupy.linalg.det","Retruns the deteminant of an array.","cupy.linalg.det(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.det.html#cupy.linalg.det","numpy.linalg.det()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.det.html#numpy.linalg.det"
"cupy.linalg.eigh","Eigenvalues and eigenvectors of a symmetric matrix.","cupy.linalg.eigh(a\, UPLO='L')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.eigh.html#cupy.linalg.eigh","numpy.linalg.eigh()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.eigh.html#numpy.linalg.eigh"
"cupy.linalg.eigvalsh","Calculates eigenvalues of a symmetric matrix.","cupy.linalg.eigvalsh(a\, UPLO='L')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.eigvalsh.html#cupy.linalg.eigvalsh","numpy.linalg.eigvalsh()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.eigvalsh.html#numpy.linalg.eigvalsh"
"cupy.linalg.inv","Computes the inverse of a matrix.","cupy.linalg.inv(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.inv.html#cupy.linalg.inv","numpy.linalg.inv()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.inv.html#numpy.linalg.inv"
"cupy.linalg.lstsq","Return the least-squares solution to a linear matrix equation.","cupy.linalg.lstsq(a\, b\, rcond=1e-15)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.lstsq.html#cupy.linalg.lstsq","numpy.linalg.lstsq()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.lstsq.html#numpy.linalg.lstsq"
"cupy.linalg.matrix_power","Raise a square matrix to the (integer) power n.","cupy.linalg.matrix_power(M\, n)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.matrix_power.html#cupy.linalg.matrix_power","",""
"cupy.linalg.matrix_rank","Return matrix rank of array using SVD method","cupy.linalg.matrix_rank(M\, tol=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.matrix_rank.html#cupy.linalg.matrix_rank","numpy.linalg.matrix_rank()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.matrix_rank.html#numpy.linalg.matrix_rank"
"cupy.linalg.norm","Returns one of matrix norms specified by ord parameter.","cupy.linalg.norm(x\, ord=None\, axis=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.norm.html#cupy.linalg.norm","",""
"cupy.linalg.pinv","Compute the Moore-Penrose pseudoinverse of a matrix.","cupy.linalg.pinv(a\, rcond=1e-15)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.pinv.html#cupy.linalg.pinv","numpy.linalg.pinv()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.pinv.html#numpy.linalg.pinv"
"cupy.linalg.qr","QR decomposition.","cupy.linalg.qr(a\, mode='reduced')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.qr.html#cupy.linalg.qr","numpy.linalg.qr()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.qr.html#numpy.linalg.qr"
"cupy.linalg.slogdet","Returns sign and logarithm of the determinant of an array.","cupy.linalg.slogdet(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.slogdet.html#cupy.linalg.slogdet","numpy.linalg.slogdet()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.slogdet.html#numpy.linalg.slogdet"
"cupy.linalg.solve","Solves a linear matrix equation.","cupy.linalg.solve(a\, b)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.solve.html#cupy.linalg.solve","numpy.linalg.solve()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.solve.html#numpy.linalg.solve"
"cupy.linalg.svd","Singular Value Decomposition.","cupy.linalg.svd(a\, full_matrices=True\, compute_uv=True)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.svd.html#cupy.linalg.svd","numpy.linalg.svd()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.svd.html#numpy.linalg.svd"
"cupy.linalg.tensorinv","Computes the inverse of a tensor.","cupy.linalg.tensorinv(a\, ind=2)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.tensorinv.html#cupy.linalg.tensorinv","numpy.linalg.tensorinv()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.tensorinv.html#numpy.linalg.tensorinv"
"cupy.linalg.tensorsolve","Solves tensor equations denoted by ax = b.","cupy.linalg.tensorsolve(a\, b\, axes=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linalg.tensorsolve.html#cupy.linalg.tensorsolve","numpy.linalg.tensorsolve()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.tensorsolve.html#numpy.linalg.tensorsolve"
"cupy.linspace","Returns an array with evenly-spaced values within a given interval.","cupy.linspace(start\, stop\, num=50\, endpoint=True\, retstep=False\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.linspace.html#cupy.linspace","",""
"cupy.load","Loads arrays or pickled objects from .npy\, .npz or pickled file.","cupy.load(file\, mmap_mode=None\, allow_pickle=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.load.html#cupy.load","numpy.load()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.load.html#numpy.load"
"cupy.log = <ufunc 'cupy_log'>","Elementwise natural logarithm function.","cupy.log = <ufunc 'cupy_log'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.log.html#cupy.log","numpy.log","https://docs.scipy.org/doc/numpy/reference/generated/numpy.log.html#numpy.log"
"cupy.log10 = <ufunc 'cupy_log10'>","Elementwise common logarithm function.","cupy.log10 = <ufunc 'cupy_log10'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.log10.html#cupy.log10","numpy.log10","https://docs.scipy.org/doc/numpy/reference/generated/numpy.log10.html#numpy.log10"
"cupy.log1p = <ufunc 'cupy_log1p'>","Computes log(1 + x) elementwise.","cupy.log1p = <ufunc 'cupy_log1p'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.log1p.html#cupy.log1p","numpy.log1p","https://docs.scipy.org/doc/numpy/reference/generated/numpy.log1p.html#numpy.log1p"
"cupy.log2 = <ufunc 'cupy_log2'>","Elementwise binary logarithm function.","cupy.log2 = <ufunc 'cupy_log2'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.log2.html#cupy.log2","numpy.log2","https://docs.scipy.org/doc/numpy/reference/generated/numpy.log2.html#numpy.log2"
"cupy.logaddexp = <ufunc 'cupy_logaddexp'>","Computes log(exp(x1) + exp(x2)) elementwise.","cupy.logaddexp = <ufunc 'cupy_logaddexp'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.logaddexp.html#cupy.logaddexp","numpy.logaddexp","https://docs.scipy.org/doc/numpy/reference/generated/numpy.logaddexp.html#numpy.logaddexp"
"cupy.logaddexp2 = <ufunc 'cupy_logaddexp2'>","Computes log2(exp2(x1) + exp2(x2)) elementwise.","cupy.logaddexp2 = <ufunc 'cupy_logaddexp2'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.logaddexp2.html#cupy.logaddexp2","numpy.logaddexp2","https://docs.scipy.org/doc/numpy/reference/generated/numpy.logaddexp2.html#numpy.logaddexp2"
"cupy.logical_and = <ufunc 'cupy_logical_and'>","Computes the logical AND of two arrays.","cupy.logical_and = <ufunc 'cupy_logical_and'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.logical_and.html#cupy.logical_and","numpy.logical_and","https://docs.scipy.org/doc/numpy/reference/generated/numpy.logical_and.html#numpy.logical_and"
"cupy.logical_not = <ufunc 'cupy_logical_not'>","Computes the logical NOT of an array.","cupy.logical_not = <ufunc 'cupy_logical_not'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.logical_not.html#cupy.logical_not","numpy.logical_not","https://docs.scipy.org/doc/numpy/reference/generated/numpy.logical_not.html#numpy.logical_not"
"cupy.logical_or = <ufunc 'cupy_logical_or'>","Computes the logical OR of two arrays.","cupy.logical_or = <ufunc 'cupy_logical_or'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.logical_or.html#cupy.logical_or","numpy.logical_or","https://docs.scipy.org/doc/numpy/reference/generated/numpy.logical_or.html#numpy.logical_or"
"cupy.logical_xor = <ufunc 'cupy_logical_xor'>","Computes the logical XOR of two arrays.","cupy.logical_xor = <ufunc 'cupy_logical_xor'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.logical_xor.html#cupy.logical_xor","numpy.logical_xor","https://docs.scipy.org/doc/numpy/reference/generated/numpy.logical_xor.html#numpy.logical_xor"
"cupy.logspace","Returns an array with evenly-spaced values on a log-scale.","cupy.logspace(start\, stop\, num=50\, endpoint=True\, base=10.0\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.logspace.html#cupy.logspace","",""
"cupy.matmul","Returns the matrix product of two arrays and is the implementation of the @ operator introduced in Python 3.5 following PEP465.","cupy.matmul(ndarray a\, ndarray b\, ndarray out=None) → ndarray","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.matmul.html#cupy.matmul","",""
"cupy.maximum = <ufunc 'cupy_maximum'>","Takes the maximum of two arrays elementwise.","cupy.maximum = <ufunc 'cupy_maximum'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.maximum.html#cupy.maximum","numpy.maximum","https://docs.scipy.org/doc/numpy/reference/generated/numpy.maximum.html#numpy.maximum"
"cupy.mean","Returns the arithmetic mean along an axis.","cupy.mean(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.mean.html#cupy.mean","numpy.mean()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.mean.html#numpy.mean"
"cupy.memoize","Makes a function memoizing the result for each argument and device.","cupy.memoize(bool for_each_device=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.memoize.html#cupy.memoize","",""
"cupy.meshgrid","Return coordinate matrices from coordinate vectors.","cupy.meshgrid(*xi\, **kwargs)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.meshgrid.html#cupy.meshgrid","numpy.meshgrid()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.meshgrid.html#numpy.meshgrid"
"cupy.minimum = <ufunc 'cupy_minimum'>","Takes the minimum of two arrays elementwise.","cupy.minimum = <ufunc 'cupy_minimum'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.minimum.html#cupy.minimum","numpy.minimum","https://docs.scipy.org/doc/numpy/reference/generated/numpy.minimum.html#numpy.minimum"
"cupy.mod = <ufunc 'cupy_remainder'>","Computes the remainder of Python division elementwise.","cupy.mod = <ufunc 'cupy_remainder'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.mod.html#cupy.mod","",""
"cupy.modf = <ufunc 'cupy_modf'>","Extracts the fractional and integral parts of an array elementwise.","cupy.modf = <ufunc 'cupy_modf'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.modf.html#cupy.modf","numpy.modf","https://docs.scipy.org/doc/numpy/reference/generated/numpy.modf.html#numpy.modf"
"cupy.moveaxis","Moves axes of an array to new positions.","cupy.moveaxis(a\, source\, destination)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.moveaxis.html#cupy.moveaxis","numpy.moveaxis()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.moveaxis.html#numpy.moveaxis"
"cupy.msort","Returns a copy of an array sorted along the first axis.","cupy.msort(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.msort.html#cupy.msort","numpy.msort()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.msort.html#numpy.msort"
"cupy.multiply = <ufunc 'cupy_multiply'>","Multiplies two arrays elementwise.","cupy.multiply = <ufunc 'cupy_multiply'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.multiply.html#cupy.multiply","numpy.multiply","https://docs.scipy.org/doc/numpy/reference/generated/numpy.multiply.html#numpy.multiply"
"cupy.nan_to_num = <ufunc 'cupy_nan_to_num'>","Elementwise nan_to_num function.","cupy.nan_to_num = <ufunc 'cupy_nan_to_num'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nan_to_num.html#cupy.nan_to_num","",""
"cupy.nanargmax","Return the indices of the maximum values in the specified axis ignoring NaNs. For all-NaN slice -1 is returned. Subclass cannot be passed yet\, subok=True still unsupported","cupy.nanargmax(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nanargmax.html#cupy.nanargmax","numpy.nanargmax()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanargmax.html#numpy.nanargmax"
"cupy.nanargmin","Return the indices of the minimum values in the specified axis ignoring NaNs. For all-NaN slice -1 is returned. Subclass cannot be passed yet\, subok=True still unsupported","cupy.nanargmin(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nanargmin.html#cupy.nanargmin","numpy.nanargmin()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanargmin.html#numpy.nanargmin"
"cupy.nanmax","Returns the maximum of an array along an axis ignoring NaN.","cupy.nanmax(a\, axis=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nanmax.html#cupy.nanmax","numpy.nanmax()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanmax.html#numpy.nanmax"
"cupy.nanmean","Returns the arithmetic mean along an axis ignoring NaN values.","cupy.nanmean(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nanmean.html#cupy.nanmean","numpy.nanmean()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanmean.html#numpy.nanmean"
"cupy.nanmin","Returns the minimum of an array along an axis ignoring NaN.","cupy.nanmin(a\, axis=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nanmin.html#cupy.nanmin","numpy.nanmin()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanmin.html#numpy.nanmin"
"cupy.nanprod","Returns the product of an array along given axes treating Not a Numbers (NaNs) as zero.","cupy.nanprod(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nanprod.html#cupy.nanprod","numpy.nanprod()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanprod.html#numpy.nanprod"
"cupy.nanstd","Returns the standard deviation along an axis ignoring NaN values.","cupy.nanstd(a\, axis=None\, dtype=None\, out=None\, ddof=0\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nanstd.html#cupy.nanstd","numpy.nanstd()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanstd.html#numpy.nanstd"
"cupy.nansum","Returns the sum of an array along given axes treating Not a Numbers (NaNs) as zero.","cupy.nansum(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nansum.html#cupy.nansum","numpy.nansum()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nansum.html#numpy.nansum"
"cupy.nanvar","Returns the variance along an axis ignoring NaN values.","cupy.nanvar(a\, axis=None\, dtype=None\, out=None\, ddof=0\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nanvar.html#cupy.nanvar","numpy.nanvar()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanvar.html#numpy.nanvar"
"cupy.negative = <ufunc 'cupy_negative'>","Takes numerical negative elementwise.","cupy.negative = <ufunc 'cupy_negative'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.negative.html#cupy.negative","numpy.negative","https://docs.scipy.org/doc/numpy/reference/generated/numpy.negative.html#numpy.negative"
"cupy.nextafter = <ufunc 'cupy_nextafter'>","Computes the nearest neighbor float values towards the second argument.","cupy.nextafter = <ufunc 'cupy_nextafter'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nextafter.html#cupy.nextafter","numpy.nextafter","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nextafter.html#numpy.nextafter"
"cupy.nonzero","Return the indices of the elements that are non-zero.","cupy.nonzero(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.nonzero.html#cupy.nonzero","numpy.nonzero()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.nonzero.html#numpy.nonzero"
"cupy.not_equal = <ufunc 'cupy_not_equal'>","Tests elementwise if x1 != x2.","cupy.not_equal = <ufunc 'cupy_not_equal'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.not_equal.html#cupy.not_equal","",""
"cupy.ones","Returns a new array of given shape and dtype\, filled with ones.","cupy.ones(shape\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.ones.html#cupy.ones","numpy.ones()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.ones.html#numpy.ones"
"cupy.ones_like","Returns an array of ones with same shape and dtype as a given array.","cupy.ones_like(a\, dtype=None\, order='K'\, subok=None\, shape=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.ones_like.html#cupy.ones_like","numpy.ones_like()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.ones_like.html#numpy.ones_like"
"cupy.outer","Returns the outer product of two vectors.","cupy.outer(a\, b\, out=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.outer.html#cupy.outer","numpy.outer()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.outer.html#numpy.outer"
"cupy.packbits","Packs the elements of a binary-valued array into bits in a uint8 array.","cupy.packbits(myarray)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.packbits.html#cupy.packbits","numpy.packbits()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.packbits.html#numpy.packbits"
"cupy.pad","Pads an array with specified widths and values.","cupy.pad(array\, pad_width\, mode='constant'\, **kwargs)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.pad.html#cupy.pad","",""
"cupy.partition","Returns a partitioned copy of an array.","cupy.partition(a\, kth\, axis=-1)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.partition.html#cupy.partition","numpy.partition()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.partition.html#numpy.partition"
"cupy.percentile","Computes the q-th percentile of the data along the specified axis.","cupy.percentile(a\, q\, axis=None\, out=None\, interpolation='linear'\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.percentile.html#cupy.percentile","numpy.percentile()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.percentile.html#numpy.percentile"
"cupy.place","Change elements of an array based on conditional and input values.","cupy.place(arr\, mask\, vals)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.place.html#cupy.place","numpy.place()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.place.html#numpy.place"
"cupy.power = <ufunc 'cupy_power'>","Computes x1 ** x2 elementwise.","cupy.power = <ufunc 'cupy_power'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.power.html#cupy.power","numpy.power","https://docs.scipy.org/doc/numpy/reference/generated/numpy.power.html#numpy.power"
"cupy.prod","Returns the product of an array along given axes.","cupy.prod(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.prod.html#cupy.prod","numpy.prod()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.prod.html#numpy.prod"
"cupy.prof.time_range","A context manager to describe the enclosed block as a nested range","cupy.prof.time_range(message\, color_id=None\, argb_color=None\, sync=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.prof.time_range.html#cupy.prof.time_range","",""
"cupy.put","Replaces specified elements of an array with given values.","cupy.put(a\, ind\, v\, mode='wrap')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.put.html#cupy.put","numpy.put()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.put.html#numpy.put"
"cupy.rad2deg = <ufunc 'cupy_rad2deg'>","Converts angles from radians to degrees elementwise.","cupy.rad2deg = <ufunc 'cupy_rad2deg'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.rad2deg.html#cupy.rad2deg","numpy.rad2deg","https://docs.scipy.org/doc/numpy/reference/generated/numpy.rad2deg.html#numpy.rad2deg"
"cupy.radians = <ufunc 'cupy_deg2rad'>","Converts angles from degrees to radians elementwise.","cupy.radians = <ufunc 'cupy_deg2rad'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.radians.html#cupy.radians","numpy.radians","https://docs.scipy.org/doc/numpy/reference/generated/numpy.radians.html#numpy.radians"
"cupy.random.beta","Beta distribution.","cupy.random.beta(a\, b\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.beta.html#cupy.random.beta","numpy.random.beta","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.beta.html#numpy.random.mtrand.RandomState.beta"
"cupy.random.binomial","Binomial distribution.","cupy.random.binomial(n\, p\, size=None\, dtype=<class 'int'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.binomial.html#cupy.random.binomial","numpy.random.binomial","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.binomial.html#numpy.random.mtrand.RandomState.binomial"
"cupy.random.bytes","Returns random bytes.","cupy.random.bytes(length)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.bytes.html#cupy.random.bytes","numpy.random.bytes","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.bytes.html#numpy.random.mtrand.RandomState.bytes"
"cupy.random.chisquare","Chi-square distribution.","cupy.random.chisquare(df\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.chisquare.html#cupy.random.chisquare","numpy.random.chisquare","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.chisquare.html#numpy.random.mtrand.RandomState.chisquare"
"cupy.random.choice","Returns an array of random values from a given 1-D array.","cupy.random.choice(a\, size=None\, replace=True\, p=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.choice.html#cupy.random.choice","numpy.random.choice","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.choice.html#numpy.random.mtrand.RandomState.choice"
"cupy.random.dirichlet","Dirichlet distribution.","cupy.random.dirichlet(alpha\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.dirichlet.html#cupy.random.dirichlet","numpy.random.dirichlet","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.dirichlet.html#numpy.random.mtrand.RandomState.dirichlet"
"cupy.random.exponential","Exponential distribution.","cupy.random.exponential(scale\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.exponential.html#cupy.random.exponential","numpy.random.exponential","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.exponential.html#numpy.random.mtrand.RandomState.exponential"
"cupy.random.f","F distribution.","cupy.random.f(dfnum\, dfden\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.f.html#cupy.random.f","numpy.random.f","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.f.html#numpy.random.mtrand.RandomState.f"
"cupy.random.gamma","Gamma distribution.","cupy.random.gamma(shape\, scale=1.0\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.gamma.html#cupy.random.gamma","numpy.random.gamma","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.gamma.html#numpy.random.mtrand.RandomState.gamma"
"cupy.random.geometric","Geometric distribution.","cupy.random.geometric(p\, size=None\, dtype=<class 'int'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.geometric.html#cupy.random.geometric","numpy.random.geometric","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.geometric.html#numpy.random.mtrand.RandomState.geometric"
"cupy.random.get_random_state","Gets the state of the random number generator for the current device.","cupy.random.get_random_state()","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.get_random_state.html#cupy.random.get_random_state","",""
"cupy.random.gumbel","Returns an array of samples drawn from a Gumbel distribution.","cupy.random.gumbel(loc=0.0\, scale=1.0\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.gumbel.html#cupy.random.gumbel","numpy.random.gumbel","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.gumbel.html#numpy.random.mtrand.RandomState.gumbel"
"cupy.random.hypergeometric","hypergeometric distribution.","cupy.random.hypergeometric(ngood\, nbad\, nsample\, size=None\, dtype=<class 'int'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.hypergeometric.html#cupy.random.hypergeometric","numpy.random.hypergeometric","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.hypergeometric.html#numpy.random.mtrand.RandomState.hypergeometric"
"cupy.random.laplace","Laplace distribution.","cupy.random.laplace(loc=0.0\, scale=1.0\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.laplace.html#cupy.random.laplace","numpy.random.laplace","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.laplace.html#numpy.random.mtrand.RandomState.laplace"
"cupy.random.logistic","Logistic distribution.","cupy.random.logistic(loc=0.0\, scale=1.0\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.logistic.html#cupy.random.logistic","numpy.random.logistic","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.logistic.html#numpy.random.mtrand.RandomState.logistic"
"cupy.random.lognormal","Returns an array of samples drawn from a log normal distribution.","cupy.random.lognormal(mean=0.0\, sigma=1.0\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.lognormal.html#cupy.random.lognormal","numpy.random.lognormal","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.lognormal.html#numpy.random.mtrand.RandomState.lognormal"
"cupy.random.logseries","Log series distribution.","cupy.random.logseries(p\, size=None\, dtype=<class 'int'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.logseries.html#cupy.random.logseries","numpy.random.logseries","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.logseries.html#numpy.random.mtrand.RandomState.logseries"
"cupy.random.multinomial","Returns an array from multinomial distribution.","cupy.random.multinomial(n\, pvals\, size=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.multinomial.html#cupy.random.multinomial","numpy.random.multinomial","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.multinomial.html#numpy.random.mtrand.RandomState.multinomial"
"cupy.random.multivariate_normal","(experimental) Multivariate normal distribution.","cupy.random.multivariate_normal(mean\, cov\, size=None\, check_valid='ignore'\, tol=1e-08\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.multivariate_normal.html#cupy.random.multivariate_normal","numpy.random.multivariate_normal","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.multivariate_normal.html#numpy.random.mtrand.RandomState.multivariate_normal"
"cupy.random.negative_binomial","Negative binomial distribution.","cupy.random.negative_binomial(n\, p\, size=None\, dtype=<class 'int'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.negative_binomial.html#cupy.random.negative_binomial","numpy.random.negative_binomial","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.negative_binomial.html#numpy.random.mtrand.RandomState.negative_binomial"
"cupy.random.noncentral_chisquare","Noncentral chisquare distribution.","cupy.random.noncentral_chisquare(df\, nonc\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.noncentral_chisquare.html#cupy.random.noncentral_chisquare","numpy.random.noncentral_chisquare","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.noncentral_chisquare.html#numpy.random.mtrand.RandomState.noncentral_chisquare"
"cupy.random.noncentral_f","Noncentral F distribution.","cupy.random.noncentral_f(dfnum\, dfden\, nonc\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.noncentral_f.html#cupy.random.noncentral_f","numpy.random.noncentral_f","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.noncentral_f.html#numpy.random.mtrand.RandomState.noncentral_f"
"cupy.random.normal","Returns an array of normally distributed samples.","cupy.random.normal(loc=0.0\, scale=1.0\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.normal.html#cupy.random.normal","numpy.random.normal","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.normal.html#numpy.random.mtrand.RandomState.normal"
"cupy.random.pareto","Pareto II or Lomax distribution.","cupy.random.pareto(a\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.pareto.html#cupy.random.pareto","numpy.random.pareto","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.pareto.html#numpy.random.mtrand.RandomState.pareto"
"cupy.random.permutation","Returns a permuted range or a permutation of an array.","cupy.random.permutation(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.permutation.html#cupy.random.permutation","numpy.random.permutation","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.permutation.html#numpy.random.mtrand.RandomState.permutation"
"cupy.random.poisson","Poisson distribution.","cupy.random.poisson(lam=1.0\, size=None\, dtype=<class 'int'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.poisson.html#cupy.random.poisson","numpy.random.poisson","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.poisson.html#numpy.random.mtrand.RandomState.poisson"
"cupy.random.power","Power distribution.","cupy.random.power(a\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.power.html#cupy.random.power","numpy.random.power","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.power.html#numpy.random.mtrand.RandomState.power"
"cupy.random.rand","Returns an array of uniform random values over the interval [0\, 1).","cupy.random.rand(*size\, **kwarg)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.rand.html#cupy.random.rand","numpy.random.rand","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.rand.html#numpy.random.mtrand.RandomState.rand"
"cupy.random.randint","Returns a scalar or an array of integer values over [low\, high).","cupy.random.randint(low\, high=None\, size=None\, dtype='l')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.randint.html#cupy.random.randint","",""
"cupy.random.randn","Returns an array of standard normal random values.","cupy.random.randn(*size\, **kwarg)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.randn.html#cupy.random.randn","numpy.random.randn","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.randn.html#numpy.random.mtrand.RandomState.randn"
"cupy.random.random","Returns an array of random values over the interval [0\, 1).","cupy.random.random(size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.random.html#cupy.random.random","",""
"cupy.random.random_integers","Return a scalar or an array of integer values over [low\, high]","cupy.random.random_integers(low\, high=None\, size=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.random_integers.html#cupy.random.random_integers","",""
"cupy.random.random_sample","Returns an array of random values over the interval [0\, 1).","cupy.random.random_sample(size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.random_sample.html#cupy.random.random_sample","numpy.random.random_sample","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.random_sample.html#numpy.random.mtrand.RandomState.random_sample"
"cupy.random.ranf","Returns an array of random values over the interval [0\, 1).","cupy.random.ranf(size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.ranf.html#cupy.random.ranf","",""
"cupy.random.rayleigh","Rayleigh distribution.","cupy.random.rayleigh(scale=1.0\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.rayleigh.html#cupy.random.rayleigh","numpy.random.rayleigh","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.rayleigh.html#numpy.random.mtrand.RandomState.rayleigh"
"cupy.random.sample","Returns an array of random values over the interval [0\, 1).","cupy.random.sample(size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.sample.html#cupy.random.sample","",""
"cupy.random.seed","Resets the state of the random number generator with a seed.","cupy.random.seed(seed=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.seed.html#cupy.random.seed","",""
"cupy.random.set_random_state","Sets the state of the random number generator for the current device.","cupy.random.set_random_state(rs)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.set_random_state.html#cupy.random.set_random_state","",""
"cupy.random.shuffle","Shuffles an array.","cupy.random.shuffle(a)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.shuffle.html#cupy.random.shuffle","numpy.random.shuffle","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.shuffle.html#numpy.random.mtrand.RandomState.shuffle"
"cupy.random.standard_cauchy","Standard cauchy distribution.","cupy.random.standard_cauchy(size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.standard_cauchy.html#cupy.random.standard_cauchy","numpy.random.standard_cauchy","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.standard_cauchy.html#numpy.random.mtrand.RandomState.standard_cauchy"
"cupy.random.standard_exponential","Standard exponential distribution.","cupy.random.standard_exponential(size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.standard_exponential.html#cupy.random.standard_exponential","numpy.random.standard_exponential","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.standard_exponential.html#numpy.random.mtrand.RandomState.standard_exponential"
"cupy.random.standard_gamma","Standard gamma distribution.","cupy.random.standard_gamma(shape\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.standard_gamma.html#cupy.random.standard_gamma","numpy.random.standard_gamma","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.standard_gamma.html#numpy.random.mtrand.RandomState.standard_gamma"
"cupy.random.standard_normal","Returns an array of samples drawn from the standard normal distribution.","cupy.random.standard_normal(size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.standard_normal.html#cupy.random.standard_normal","numpy.random.standard_normal","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.standard_normal.html#numpy.random.mtrand.RandomState.standard_normal"
"cupy.random.standard_t","Standard Student’s t distribution.","cupy.random.standard_t(df\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.standard_t.html#cupy.random.standard_t","numpy.random.standard_t","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.standard_t.html#numpy.random.mtrand.RandomState.standard_t"
"cupy.random.triangular","Triangular distribution.","cupy.random.triangular(left\, mode\, right\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.triangular.html#cupy.random.triangular","numpy.random.triangular","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.triangular.html#numpy.random.mtrand.RandomState.triangular"
"cupy.random.uniform","Returns an array of uniformly-distributed samples over an interval.","cupy.random.uniform(low=0.0\, high=1.0\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.uniform.html#cupy.random.uniform","numpy.random.uniform","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.uniform.html#numpy.random.mtrand.RandomState.uniform"
"cupy.random.vonmises","von Mises distribution.","cupy.random.vonmises(mu\, kappa\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.vonmises.html#cupy.random.vonmises","numpy.random.vonmises","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.vonmises.html#numpy.random.mtrand.RandomState.vonmises"
"cupy.random.wald","Wald distribution.","cupy.random.wald(mean\, scale\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.wald.html#cupy.random.wald","numpy.random.wald","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.wald.html#numpy.random.mtrand.RandomState.wald"
"cupy.random.weibull","weibull distribution.","cupy.random.weibull(a\, size=None\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.weibull.html#cupy.random.weibull","numpy.random.weibull","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.weibull.html#numpy.random.mtrand.RandomState.weibull"
"cupy.random.zipf","Zipf distribution.","cupy.random.zipf(a\, size=None\, dtype=<class 'int'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.random.zipf.html#cupy.random.zipf","numpy.random.zipf","https://docs.scipy.org/doc/numpy/reference/random/generated/numpy.random.mtrand.RandomState.zipf.html#numpy.random.mtrand.RandomState.zipf"
"cupy.ravel","Returns a flattened array.","cupy.ravel(a\, order='C')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.ravel.html#cupy.ravel","numpy.ravel()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.ravel.html#numpy.ravel"
"cupy.real","Returns the real part of the elements of the array.","cupy.real(val)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.real.html#cupy.real","numpy.real()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.real.html#numpy.real"
"cupy.reciprocal = <ufunc 'cupy_reciprocal'>","Computes 1 / x elementwise.","cupy.reciprocal = <ufunc 'cupy_reciprocal'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.reciprocal.html#cupy.reciprocal","numpy.reciprocal","https://docs.scipy.org/doc/numpy/reference/generated/numpy.reciprocal.html#numpy.reciprocal"
"cupy.remainder = <ufunc 'cupy_remainder'>","Computes the remainder of Python division elementwise.","cupy.remainder = <ufunc 'cupy_remainder'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.remainder.html#cupy.remainder","numpy.remainder","https://docs.scipy.org/doc/numpy/reference/generated/numpy.remainder.html#numpy.remainder"
"cupy.repeat","Repeat arrays along an axis.","cupy.repeat(a\, repeats\, axis=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.repeat.html#cupy.repeat","numpy.repeat()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.repeat.html#numpy.repeat"
"cupy.reshape","Returns an array with new shape and same elements.","cupy.reshape(a\, newshape\, order='C')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.reshape.html#cupy.reshape","numpy.reshape()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html#numpy.reshape"
"cupy.result_type","Returns the type that results from applying the NumPy type promotion rules to the arguments.","cupy.result_type(*arrays_and_dtypes)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.result_type.html#cupy.result_type","numpy.result_type()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.result_type.html#numpy.result_type"
"cupy.right_shift = <ufunc 'cupy_right_shift'>","Shifts the bits of each integer element to the right.","cupy.right_shift = <ufunc 'cupy_right_shift'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.right_shift.html#cupy.right_shift","numpy.right_shift","https://docs.scipy.org/doc/numpy/reference/generated/numpy.right_shift.html#numpy.right_shift"
"cupy.rint = <ufunc 'cupy_rint'>","Rounds each element of an array to the nearest integer.","cupy.rint = <ufunc 'cupy_rint'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.rint.html#cupy.rint","numpy.rint","https://docs.scipy.org/doc/numpy/reference/generated/numpy.rint.html#numpy.rint"
"cupy.roll","Roll array elements along a given axis.","cupy.roll(a\, shift\, axis=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.roll.html#cupy.roll","numpy.roll()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.roll.html#numpy.roll"
"cupy.rollaxis","Moves the specified axis backwards to the given place.","cupy.rollaxis(a\, axis\, start=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.rollaxis.html#cupy.rollaxis","numpy.rollaxis()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.rollaxis.html#numpy.rollaxis"
"cupy.rot90","Rotate an array by 90 degrees in the plane specified by axes.","cupy.rot90(a\, k=1\, axes=(0\, 1))","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.rot90.html#cupy.rot90","numpy.rot90()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.rot90.html#numpy.rot90"
"cupy.save","Saves an array to a binary file in .npy format.","cupy.save(file\, arr\, allow_pickle=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.save.html#cupy.save","numpy.save()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.save.html#numpy.save"
"cupy.savez","Saves one or more arrays into a file in uncompressed .npz format.","cupy.savez(file\, *args\, **kwds)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.savez.html#cupy.savez","numpy.savez()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.savez.html#numpy.savez"
"cupy.savez_compressed","Saves one or more arrays into a file in compressed .npz format.","cupy.savez_compressed(file\, *args\, **kwds)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.savez_compressed.html#cupy.savez_compressed","numpy.savez_compressed()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.savez_compressed.html#numpy.savez_compressed"
"cupy.sign = <ufunc 'cupy_sign'>","Elementwise sign function.","cupy.sign = <ufunc 'cupy_sign'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.sign.html#cupy.sign","numpy.sign","https://docs.scipy.org/doc/numpy/reference/generated/numpy.sign.html#numpy.sign"
"cupy.signbit = <ufunc 'cupy_signbit'>","Tests elementwise if the sign bit is set (i.e. less than zero).","cupy.signbit = <ufunc 'cupy_signbit'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.signbit.html#cupy.signbit","numpy.signbit","https://docs.scipy.org/doc/numpy/reference/generated/numpy.signbit.html#numpy.signbit"
"cupy.sin = <ufunc 'cupy_sin'>","Elementwise sine function.","cupy.sin = <ufunc 'cupy_sin'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.sin.html#cupy.sin","numpy.sin","https://docs.scipy.org/doc/numpy/reference/generated/numpy.sin.html#numpy.sin"
"cupy.sinc = <ufunc 'cupy_sinc'>","Elementwise sinc function.","cupy.sinc = <ufunc 'cupy_sinc'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.sinc.html#cupy.sinc","numpy.sinc()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.sinc.html#numpy.sinc"
"cupy.sinh = <ufunc 'cupy_sinh'>","Elementwise hyperbolic sine function.","cupy.sinh = <ufunc 'cupy_sinh'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.sinh.html#cupy.sinh","numpy.sinh","https://docs.scipy.org/doc/numpy/reference/generated/numpy.sinh.html#numpy.sinh"
"cupy.sort","Returns a sorted copy of an array with a stable sorting algorithm.","cupy.sort(a\, axis=-1)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.sort.html#cupy.sort","numpy.sort()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.sort.html#numpy.sort"
"cupy.split","Splits an array into multiple sub arrays along a given axis.","cupy.split(ary\, indices_or_sections\, axis=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.split.html#cupy.split","numpy.split()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.split.html#numpy.split"
"cupy.sqrt = <ufunc 'cupy_sqrt'>","Elementwise square root function.","cupy.sqrt = <ufunc 'cupy_sqrt'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.sqrt.html#cupy.sqrt","numpy.sqrt","https://docs.scipy.org/doc/numpy/reference/generated/numpy.sqrt.html#numpy.sqrt"
"cupy.square = <ufunc 'cupy_square'>","Elementwise square function.","cupy.square = <ufunc 'cupy_square'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.square.html#cupy.square","numpy.square","https://docs.scipy.org/doc/numpy/reference/generated/numpy.square.html#numpy.square"
"cupy.squeeze","Removes size-one axes from the shape of an array.","cupy.squeeze(a\, axis=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.squeeze.html#cupy.squeeze","numpy.squeeze()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.squeeze.html#numpy.squeeze"
"cupy.stack","Stacks arrays along a new axis.","cupy.stack(tup\, axis=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.stack.html#cupy.stack","numpy.stack()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.stack.html#numpy.stack"
"cupy.std","Returns the standard deviation along an axis.","cupy.std(a\, axis=None\, dtype=None\, out=None\, ddof=0\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.std.html#cupy.std","numpy.std()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.std.html#numpy.std"
"cupy.subtract = <ufunc 'cupy_subtract'>","Subtracts arguments elementwise.","cupy.subtract = <ufunc 'cupy_subtract'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.subtract.html#cupy.subtract","numpy.subtract","https://docs.scipy.org/doc/numpy/reference/generated/numpy.subtract.html#numpy.subtract"
"cupy.sum","Returns the sum of an array along given axes.","cupy.sum(a\, axis=None\, dtype=None\, out=None\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.sum.html#cupy.sum","numpy.sum()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html#numpy.sum"
"cupy.swapaxes","Swaps the two axes.","cupy.swapaxes(a\, axis1\, axis2)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.swapaxes.html#cupy.swapaxes","numpy.swapaxes()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.swapaxes.html#numpy.swapaxes"
"cupy.take","Takes elements of an array at specified indices along an axis.","cupy.take(a\, indices\, axis=None\, out=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.take.html#cupy.take","numpy.take()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.take.html#numpy.take"
"cupy.take_along_axis","Take values from the input array by matching 1d index and data slices.","cupy.take_along_axis(a\, indices\, axis)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.take_along_axis.html#cupy.take_along_axis","numpy.take_along_axis()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.take_along_axis.html#numpy.take_along_axis"
"cupy.tan = <ufunc 'cupy_tan'>","Elementwise tangent function.","cupy.tan = <ufunc 'cupy_tan'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.tan.html#cupy.tan","numpy.tan","https://docs.scipy.org/doc/numpy/reference/generated/numpy.tan.html#numpy.tan"
"cupy.tanh = <ufunc 'cupy_tanh'>","Elementwise hyperbolic tangent function.","cupy.tanh = <ufunc 'cupy_tanh'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.tanh.html#cupy.tanh","numpy.tanh","https://docs.scipy.org/doc/numpy/reference/generated/numpy.tanh.html#numpy.tanh"
"cupy.tensordot","Returns the tensor dot product of two arrays along specified axes.","cupy.tensordot(a\, b\, axes=2)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.tensordot.html#cupy.tensordot","numpy.tensordot()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.tensordot.html#numpy.tensordot"
"cupy.tile","Construct an array by repeating A the number of times given by reps.","cupy.tile(A\, reps)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.tile.html#cupy.tile","numpy.tile()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.tile.html#numpy.tile"
"cupy.trace","Returns the sum along the diagonals of an array.","cupy.trace(a\, offset=0\, axis1=0\, axis2=1\, dtype=None\, out=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.trace.html#cupy.trace","numpy.trace()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.trace.html#numpy.trace"
"cupy.transpose","Permutes the dimensions of an array.","cupy.transpose(a\, axes=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.transpose.html#cupy.transpose","numpy.transpose()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.transpose.html#numpy.transpose"
"cupy.tri","Creates an array with ones at and below the given diagonal.","cupy.tri(N\, M=None\, k=0\, dtype=<class 'float'>)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.tri.html#cupy.tri","numpy.tri()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.tri.html#numpy.tri"
"cupy.tril","Returns a lower triangle of an array.","cupy.tril(m\, k=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.tril.html#cupy.tril","numpy.tril()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.tril.html#numpy.tril"
"cupy.triu","Returns an upper triangle of an array.","cupy.triu(m\, k=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.triu.html#cupy.triu","numpy.triu()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.triu.html#numpy.triu"
"cupy.true_divide = <ufunc 'cupy_true_divide'>","Elementwise true division (i.e. division as floating values).","cupy.true_divide = <ufunc 'cupy_true_divide'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.true_divide.html#cupy.true_divide","numpy.true_divide","https://docs.scipy.org/doc/numpy/reference/generated/numpy.true_divide.html#numpy.true_divide"
"cupy.trunc = <ufunc 'cupy_trunc'>","Rounds each element of an array towards zero.","cupy.trunc = <ufunc 'cupy_trunc'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.trunc.html#cupy.trunc","numpy.trunc","https://docs.scipy.org/doc/numpy/reference/generated/numpy.trunc.html#numpy.trunc"
"cupy.unique","Find the unique elements of an array.","cupy.unique(ar\, return_index=False\, return_inverse=False\, return_counts=False\, axis=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.unique.html#cupy.unique","numpy.unique()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.unique.html#numpy.unique"
"cupy.unpackbits","Unpacks elements of a uint8 array into a binary-valued output array.","cupy.unpackbits(myarray)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.unpackbits.html#cupy.unpackbits","numpy.unpackbits()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.unpackbits.html#numpy.unpackbits"
"cupy.unravel_index","Converts array of flat indices into a tuple of coordinate arrays.","cupy.unravel_index(indices\, dims\, order='C')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.unravel_index.html#cupy.unravel_index","numpy.unravel_index()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.unravel_index.html#numpy.unravel_index"
"cupy.unwrap","Unwrap by changing deltas between values to 2*pi complement.","cupy.unwrap(p\, discont=3.141592653589793\, axis=-1)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.unwrap.html#cupy.unwrap","numpy.unwrap()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.unwrap.html#numpy.unwrap"
"cupy.var","Returns the variance along an axis.","cupy.var(a\, axis=None\, dtype=None\, out=None\, ddof=0\, keepdims=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.var.html#cupy.var","numpy.var()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.var.html#numpy.var"
"cupy.vdot","Returns the dot product of two vectors.","cupy.vdot(a\, b)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.vdot.html#cupy.vdot","numpy.vdot()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.vdot.html#numpy.vdot"
"cupy.vsplit","Splits an array into multiple sub arrays along the first axis.","cupy.vsplit(ary\, indices_or_sections)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.vsplit.html#cupy.vsplit","",""
"cupy.vstack","Stacks arrays vertically.","cupy.vstack(tup)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.vstack.html#cupy.vstack","",""
"cupy.where","Return elements\, either from x or y\, depending on condition.","cupy.where(condition\, x=None\, y=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.where.html#cupy.where","numpy.where()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.where.html#numpy.where"
"cupy.zeros","Returns a new array of given shape and dtype\, filled with zeros.","cupy.zeros(shape\, dtype=<class 'float'>\, order='C')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.zeros.html#cupy.zeros","numpy.zeros()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros.html#numpy.zeros"
"cupy.zeros_like","Returns an array of zeros with same shape and dtype as a given array.","cupy.zeros_like(a\, dtype=None\, order='K'\, subok=None\, shape=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupy.zeros_like.html#cupy.zeros_like","numpy.zeros_like()","https://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros_like.html#numpy.zeros_like"
"cupyx.rsqrt = <ufunc 'cupy_rsqrt'>","Returns the reciprocal square root.","cupyx.rsqrt = <ufunc 'cupy_rsqrt'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.rsqrt.html#cupyx.rsqrt","",""
"cupyx.scatter_add","Adds given values to specified elements of an array.","cupyx.scatter_add(a\, slices\, value)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scatter_add.html#cupyx.scatter_add","",""
"cupyx.scatter_max","Stores a maximum value of elements specified by indices to an array.","cupyx.scatter_max(a\, slices\, value)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scatter_max.html#cupyx.scatter_max","",""
"cupyx.scatter_min","Stores a minimum value of elements specified by indices to an array.","cupyx.scatter_min(a\, slices\, value)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scatter_min.html#cupyx.scatter_min","",""
"cupyx.scipy.fft.fft","Compute the one-dimensional FFT.","cupyx.scipy.fft.fft(x\, n=None\, axis=-1\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.fft.html#cupyx.scipy.fft.fft","",""
"cupyx.scipy.fft.fft2","Compute the two-dimensional FFT.","cupyx.scipy.fft.fft2(x\, s=None\, axes=(-2\, -1)\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.fft2.html#cupyx.scipy.fft.fft2","",""
"cupyx.scipy.fft.fftn","Compute the N-dimensional FFT.","cupyx.scipy.fft.fftn(x\, s=None\, axes=None\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.fftn.html#cupyx.scipy.fft.fftn","",""
"cupyx.scipy.fft.hfft","Compute the FFT of a signal that has Hermitian symmetry.","cupyx.scipy.fft.hfft(x\, n=None\, axis=-1\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.hfft.html#cupyx.scipy.fft.hfft","",""
"cupyx.scipy.fft.ifft","Compute the one-dimensional inverse FFT.","cupyx.scipy.fft.ifft(x\, n=None\, axis=-1\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.ifft.html#cupyx.scipy.fft.ifft","",""
"cupyx.scipy.fft.ifft2","Compute the two-dimensional inverse FFT.","cupyx.scipy.fft.ifft2(x\, s=None\, axes=(-2\, -1)\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.ifft2.html#cupyx.scipy.fft.ifft2","",""
"cupyx.scipy.fft.ifftn","Compute the N-dimensional inverse FFT.","cupyx.scipy.fft.ifftn(x\, s=None\, axes=None\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.ifftn.html#cupyx.scipy.fft.ifftn","",""
"cupyx.scipy.fft.ihfft","Compute the FFT of a signal that has Hermitian symmetry.","cupyx.scipy.fft.ihfft(x\, n=None\, axis=-1\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.ihfft.html#cupyx.scipy.fft.ihfft","",""
"cupyx.scipy.fft.irfft","Compute the one-dimensional inverse FFT for real input.","cupyx.scipy.fft.irfft(x\, n=None\, axis=-1\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.irfft.html#cupyx.scipy.fft.irfft","",""
"cupyx.scipy.fft.irfft2","Compute the two-dimensional inverse FFT for real input.","cupyx.scipy.fft.irfft2(x\, s=None\, axes=(-2\, -1)\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.irfft2.html#cupyx.scipy.fft.irfft2","",""
"cupyx.scipy.fft.irfftn","Compute the N-dimensional inverse FFT for real input.","cupyx.scipy.fft.irfftn(x\, s=None\, axes=None\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.irfftn.html#cupyx.scipy.fft.irfftn","",""
"cupyx.scipy.fft.rfft","Compute the one-dimensional FFT for real input.","cupyx.scipy.fft.rfft(x\, n=None\, axis=-1\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.rfft.html#cupyx.scipy.fft.rfft","",""
"cupyx.scipy.fft.rfft2","Compute the two-dimensional FFT for real input.","cupyx.scipy.fft.rfft2(x\, s=None\, axes=(-2\, -1)\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.rfft2.html#cupyx.scipy.fft.rfft2","",""
"cupyx.scipy.fft.rfftn","Compute the N-dimensional FFT for real input.","cupyx.scipy.fft.rfftn(x\, s=None\, axes=None\, norm=None\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fft.rfftn.html#cupyx.scipy.fft.rfftn","",""
"cupyx.scipy.fftpack.fft","Compute the one-dimensional FFT.","cupyx.scipy.fftpack.fft(x\, n=None\, axis=-1\, overwrite_x=False\, plan=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.fft.html#cupyx.scipy.fftpack.fft","",""
"cupyx.scipy.fftpack.fft2","Compute the two-dimensional FFT.","cupyx.scipy.fftpack.fft2(x\, shape=None\, axes=(-2\, -1)\, overwrite_x=False\, plan=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.fft2.html#cupyx.scipy.fftpack.fft2","",""
"cupyx.scipy.fftpack.fftn","Compute the N-dimensional FFT.","cupyx.scipy.fftpack.fftn(x\, shape=None\, axes=None\, overwrite_x=False\, plan=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.fftn.html#cupyx.scipy.fftpack.fftn","",""
"cupyx.scipy.fftpack.get_fft_plan","Generate a CUDA FFT plan for transforming up to three axes.","cupyx.scipy.fftpack.get_fft_plan(a\, shape=None\, axes=None\, value_type='C2C')","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.get_fft_plan.html#cupyx.scipy.fftpack.get_fft_plan","",""
"cupyx.scipy.fftpack.ifft","Compute the one-dimensional inverse FFT.","cupyx.scipy.fftpack.ifft(x\, n=None\, axis=-1\, overwrite_x=False\, plan=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.ifft.html#cupyx.scipy.fftpack.ifft","",""
"cupyx.scipy.fftpack.ifft2","Compute the two-dimensional inverse FFT.","cupyx.scipy.fftpack.ifft2(x\, shape=None\, axes=(-2\, -1)\, overwrite_x=False\, plan=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.ifft2.html#cupyx.scipy.fftpack.ifft2","",""
"cupyx.scipy.fftpack.ifftn","Compute the N-dimensional inverse FFT.","cupyx.scipy.fftpack.ifftn(x\, shape=None\, axes=None\, overwrite_x=False\, plan=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.ifftn.html#cupyx.scipy.fftpack.ifftn","",""
"cupyx.scipy.fftpack.irfft","Compute the one-dimensional inverse FFT for real input.","cupyx.scipy.fftpack.irfft(x\, n=None\, axis=-1\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.irfft.html#cupyx.scipy.fftpack.irfft","",""
"cupyx.scipy.fftpack.rfft","Compute the one-dimensional FFT for real input.","cupyx.scipy.fftpack.rfft(x\, n=None\, axis=-1\, overwrite_x=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.fftpack.rfft.html#cupyx.scipy.fftpack.rfft","",""
"cupyx.scipy.get_array_module","Returns the array module for arguments.","cupyx.scipy.get_array_module(*args)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.get_array_module.html#cupyx.scipy.get_array_module","",""
"cupyx.scipy.linalg.lu_factor","LU decomposition.","cupyx.scipy.linalg.lu_factor(a\, overwrite_a=False\, check_finite=True)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.linalg.lu_factor.html#cupyx.scipy.linalg.lu_factor","",""
"cupyx.scipy.linalg.lu_solve","Solve an equation system\, a * x = b\, given the LU factorization of a","cupyx.scipy.linalg.lu_solve(lu_and_piv\, b\, trans=0\, overwrite_b=False\, check_finite=True)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.linalg.lu_solve.html#cupyx.scipy.linalg.lu_solve","",""
"cupyx.scipy.linalg.solve_triangular","Solve the equation a x = b for x\, assuming a is a triangular matrix.","cupyx.scipy.linalg.solve_triangular(a\, b\, trans=0\, lower=False\, unit_diagonal=False\, overwrite_b=False\, check_finite=False)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.linalg.solve_triangular.html#cupyx.scipy.linalg.solve_triangular","",""
"cupyx.scipy.ndimage.affine_transform","Apply an affine transformation.","cupyx.scipy.ndimage.affine_transform(input\, matrix\, offset=0.0\, output_shape=None\, output=None\, order=None\, mode='constant'\, cval=0.0\, prefilter=True)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.ndimage.affine_transform.html#cupyx.scipy.ndimage.affine_transform","",""
"cupyx.scipy.ndimage.convolve","Multi-dimensional convolution.","cupyx.scipy.ndimage.convolve(input\, weights\, output=None\, mode='reflect'\, cval=0.0\, origin=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.ndimage.convolve.html#cupyx.scipy.ndimage.convolve","",""
"cupyx.scipy.ndimage.correlate","Multi-dimensional correlate.","cupyx.scipy.ndimage.correlate(input\, weights\, output=None\, mode='reflect'\, cval=0.0\, origin=0)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.ndimage.correlate.html#cupyx.scipy.ndimage.correlate","",""
"cupyx.scipy.ndimage.map_coordinates","Map the input array to new coordinates by interpolation.","cupyx.scipy.ndimage.map_coordinates(input\, coordinates\, output=None\, order=None\, mode='constant'\, cval=0.0\, prefilter=True)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.ndimage.map_coordinates.html#cupyx.scipy.ndimage.map_coordinates","",""
"cupyx.scipy.ndimage.rotate","Rotate an array.","cupyx.scipy.ndimage.rotate(input\, angle\, axes=(1\, 0)\, reshape=True\, output=None\, order=None\, mode='constant'\, cval=0.0\, prefilter=True)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.ndimage.rotate.html#cupyx.scipy.ndimage.rotate","",""
"cupyx.scipy.ndimage.shift","Shift an array.","cupyx.scipy.ndimage.shift(input\, shift\, output=None\, order=None\, mode='constant'\, cval=0.0\, prefilter=True)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.ndimage.shift.html#cupyx.scipy.ndimage.shift","",""
"cupyx.scipy.ndimage.zoom","Zoom an array.","cupyx.scipy.ndimage.zoom(input\, zoom\, output=None\, order=None\, mode='constant'\, cval=0.0\, prefilter=True)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.ndimage.zoom.html#cupyx.scipy.ndimage.zoom","",""
"cupyx.scipy.sparse.diags","Construct a sparse matrix from diagonals.","cupyx.scipy.sparse.diags(diagonals\, offsets=0\, shape=None\, format=None\, dtype=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.diags.html#cupyx.scipy.sparse.diags","",""
"cupyx.scipy.sparse.eye","Creates a sparse matrix with ones on diagonal.","cupyx.scipy.sparse.eye(m\, n=None\, k=0\, dtype='d'\, format=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.eye.html#cupyx.scipy.sparse.eye","",""
"cupyx.scipy.sparse.identity","Creates an identity matrix in sparse format.","cupyx.scipy.sparse.identity(n\, dtype='d'\, format=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.identity.html#cupyx.scipy.sparse.identity","",""
"cupyx.scipy.sparse.issparse","Checks if a given matrix is a sparse matrix.","cupyx.scipy.sparse.issparse(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.issparse.html#cupyx.scipy.sparse.issparse","",""
"cupyx.scipy.sparse.isspmatrix","Checks if a given matrix is a sparse matrix.","cupyx.scipy.sparse.isspmatrix(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.isspmatrix.html#cupyx.scipy.sparse.isspmatrix","",""
"cupyx.scipy.sparse.isspmatrix_coo","Checks if a given matrix is of COO format.","cupyx.scipy.sparse.isspmatrix_coo(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.isspmatrix_coo.html#cupyx.scipy.sparse.isspmatrix_coo","",""
"cupyx.scipy.sparse.isspmatrix_csc","Checks if a given matrix is of CSC format.","cupyx.scipy.sparse.isspmatrix_csc(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.isspmatrix_csc.html#cupyx.scipy.sparse.isspmatrix_csc","",""
"cupyx.scipy.sparse.isspmatrix_csr","Checks if a given matrix is of CSR format.","cupyx.scipy.sparse.isspmatrix_csr(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.isspmatrix_csr.html#cupyx.scipy.sparse.isspmatrix_csr","",""
"cupyx.scipy.sparse.isspmatrix_dia","Checks if a given matrix is of DIA format.","cupyx.scipy.sparse.isspmatrix_dia(x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.isspmatrix_dia.html#cupyx.scipy.sparse.isspmatrix_dia","",""
"cupyx.scipy.sparse.linalg.lsqr","Solves linear system with QR decomposition.","cupyx.scipy.sparse.linalg.lsqr(A\, b)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.linalg.lsqr.html#cupyx.scipy.sparse.linalg.lsqr","",""
"cupyx.scipy.sparse.rand","Generates a random sparse matrix.","cupyx.scipy.sparse.rand(m\, n\, density=0.01\, format='coo'\, dtype=None\, random_state=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.rand.html#cupyx.scipy.sparse.rand","",""
"cupyx.scipy.sparse.random","Generates a random sparse matrix.","cupyx.scipy.sparse.random(m\, n\, density=0.01\, format='coo'\, dtype=None\, random_state=None\, data_rvs=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.random.html#cupyx.scipy.sparse.random","",""
"cupyx.scipy.sparse.spdiags","Creates a sparse matrix from diagonals.","cupyx.scipy.sparse.spdiags(data\, diags\, m\, n\, format=None)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.sparse.spdiags.html#cupyx.scipy.sparse.spdiags","",""
"cupyx.scipy.special.digamma = <ufunc 'cupyx_scipy_digamma'>","The digamma function.","cupyx.scipy.special.digamma = <ufunc 'cupyx_scipy_digamma'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.digamma.html#cupyx.scipy.special.digamma","",""
"cupyx.scipy.special.erf = <ufunc 'cupyx_scipy_erf'>","Error function.","cupyx.scipy.special.erf = <ufunc 'cupyx_scipy_erf'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.erf.html#cupyx.scipy.special.erf","",""
"cupyx.scipy.special.erfc = <ufunc 'cupyx_scipy_erfc'>","Complementary error function.","cupyx.scipy.special.erfc = <ufunc 'cupyx_scipy_erfc'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.erfc.html#cupyx.scipy.special.erfc","",""
"cupyx.scipy.special.erfcinv = <ufunc 'cupyx_scipy_erfcinv'>","Inverse function of complementary error function.","cupyx.scipy.special.erfcinv = <ufunc 'cupyx_scipy_erfcinv'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.erfcinv.html#cupyx.scipy.special.erfcinv","",""
"cupyx.scipy.special.erfcx = <ufunc 'cupyx_scipy_erfcx'>","Scaled complementary error function.","cupyx.scipy.special.erfcx = <ufunc 'cupyx_scipy_erfcx'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.erfcx.html#cupyx.scipy.special.erfcx","",""
"cupyx.scipy.special.erfinv = <ufunc 'cupyx_scipy_erfinv'>","Inverse function of error function.","cupyx.scipy.special.erfinv = <ufunc 'cupyx_scipy_erfinv'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.erfinv.html#cupyx.scipy.special.erfinv","",""
"cupyx.scipy.special.gamma = <ufunc 'cupyx_scipy_gamma'>","Gamma function.","cupyx.scipy.special.gamma = <ufunc 'cupyx_scipy_gamma'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.gamma.html#cupyx.scipy.special.gamma","",""
"cupyx.scipy.special.gammaln = <ufunc 'cupyx_scipy_gammaln'>","Logarithm of the absolute value of the Gamma function.","cupyx.scipy.special.gammaln = <ufunc 'cupyx_scipy_gammaln'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.gammaln.html#cupyx.scipy.special.gammaln","",""
"cupyx.scipy.special.i0 = <ufunc 'cupyx_scipy_i0'>","Modified Bessel function of order 0.","cupyx.scipy.special.i0 = <ufunc 'cupyx_scipy_i0'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.i0.html#cupyx.scipy.special.i0","",""
"cupyx.scipy.special.i1 = <ufunc 'cupyx_scipy_i1'>","Modified Bessel function of order 1.","cupyx.scipy.special.i1 = <ufunc 'cupyx_scipy_i1'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.i1.html#cupyx.scipy.special.i1","",""
"cupyx.scipy.special.j0 = <ufunc 'cupyx_scipy_j0'>","Bessel function of the first kind of order 0.","cupyx.scipy.special.j0 = <ufunc 'cupyx_scipy_j0'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.j0.html#cupyx.scipy.special.j0","",""
"cupyx.scipy.special.j1 = <ufunc 'cupyx_scipy_j1'>","Bessel function of the first kind of order 1.","cupyx.scipy.special.j1 = <ufunc 'cupyx_scipy_j1'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.j1.html#cupyx.scipy.special.j1","",""
"cupyx.scipy.special.ndtr = <ufunc 'cupyx_scipy_ndtr'>","Cumulative distribution function of normal distribution.","cupyx.scipy.special.ndtr = <ufunc 'cupyx_scipy_ndtr'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.ndtr.html#cupyx.scipy.special.ndtr","",""
"cupyx.scipy.special.polygamma","Polygamma function n.","cupyx.scipy.special.polygamma(n\, x)","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.polygamma.html#cupyx.scipy.special.polygamma","",""
"cupyx.scipy.special.y0 = <ufunc 'cupyx_scipy_y0'>","Bessel function of the second kind of order 0.","cupyx.scipy.special.y0 = <ufunc 'cupyx_scipy_y0'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.y0.html#cupyx.scipy.special.y0","",""
"cupyx.scipy.special.y1 = <ufunc 'cupyx_scipy_y1'>","Bessel function of the second kind of order 1.","cupyx.scipy.special.y1 = <ufunc 'cupyx_scipy_y1'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.y1.html#cupyx.scipy.special.y1","",""
"cupyx.scipy.special.zeta = <ufunc 'cupyx_scipy_zeta'>","Hurwitz zeta function.","cupyx.scipy.special.zeta = <ufunc 'cupyx_scipy_zeta'>","https://docs-cupy.chainer.org/en/stable/reference/generated/cupyx.scipy.special.zeta.html#cupyx.scipy.special.zeta","",""
