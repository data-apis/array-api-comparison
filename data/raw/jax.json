[{"name":"abs","description":"Calculate the absolute value element-wise.","signature":"abs(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.abs.html#jax.numpy.abs"},{"name":"absolute","description":"Calculate the absolute value element-wise.","signature":"absolute(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.absolute.html#jax.numpy.absolute"},{"name":"add","description":"Add arguments element-wise.","signature":"add(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.add.html#jax.numpy.add"},{"name":"all","description":"Test whether all array elements along a given axis evaluate to True.","signature":"all(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.all.html#jax.numpy.all"},{"name":"allclose","description":"Returns True if two arrays are element-wise equal within a tolerance.","signature":"allclose(a, b[, rtol, atol])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.allclose.html#jax.numpy.allclose"},{"name":"alltrue","description":"Test whether all array elements along a given axis evaluate to True.","signature":"alltrue(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.alltrue.html#jax.numpy.alltrue"},{"name":"amax","description":"Return the maximum of an array or maximum along an axis.","signature":"amax(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.amax.html#jax.numpy.amax"},{"name":"amin","description":"Return the minimum of an array or minimum along an axis.","signature":"amin(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.amin.html#jax.numpy.amin"},{"name":"angle","description":"Return the angle of the complex argument.","signature":"angle(z)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.angle.html#jax.numpy.angle"},{"name":"any","description":"Test whether any array element along a given axis evaluates to True.","signature":"any(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.any.html#jax.numpy.any"},{"name":"append","description":"Append values to the end of an array.","signature":"append(arr, values[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.append.html#jax.numpy.append"},{"name":"arange","description":"Return evenly spaced values within a given interval.","signature":"arange(start[, stop, step, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.arange.html#jax.numpy.arange"},{"name":"arccos","description":"Trigonometric inverse cosine, element-wise.","signature":"arccos(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.arccos.html#jax.numpy.arccos"},{"name":"arccosh","description":"Inverse hyperbolic cosine, element-wise.","signature":"arccosh(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.arccosh.html#jax.numpy.arccosh"},{"name":"arcsin","description":"Inverse sine, element-wise.","signature":"arcsin(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.arcsin.html#jax.numpy.arcsin"},{"name":"arcsinh","description":"Inverse hyperbolic sine element-wise.","signature":"arcsinh(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.arcsinh.html#jax.numpy.arcsinh"},{"name":"arctan","description":"Trigonometric inverse tangent, element-wise.","signature":"arctan(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.arctan.html#jax.numpy.arctan"},{"name":"arctan2","description":"Element-wise arc tangent of x1/x2 choosing the quadrant correctly.","signature":"arctan2(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.arctan2.html#jax.numpy.arctan2"},{"name":"arctanh","description":"Inverse hyperbolic tangent element-wise.","signature":"arctanh(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.arctanh.html#jax.numpy.arctanh"},{"name":"argmax","description":"Returns the indices of the maximum values along an axis.","signature":"argmax(a[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.argmax.html#jax.numpy.argmax"},{"name":"argmin","description":"Returns the indices of the minimum values along an axis.","signature":"argmin(a[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.argmin.html#jax.numpy.argmin"},{"name":"argsort","description":"Returns the indices that would sort an array.","signature":"argsort(a[, axis, kind, order])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.argsort.html#jax.numpy.argsort"},{"name":"around","description":"Round an array to the given number of decimals.","signature":"around(a[, decimals])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.around.html#jax.numpy.around"},{"name":"array","description":"Create an array.","signature":"array(object[, dtype, copy, order, ndmin])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.array.html#jax.numpy.array"},{"name":"array_repr","description":"Return the string representation of an array.","signature":"array_repr(arr[, max_line_width, precision, …])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.array_repr.html#jax.numpy.array_repr"},{"name":"array_str","description":"Return a string representation of the data in an array.","signature":"array_str(a[, max_line_width, precision, …])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.array_str.html#jax.numpy.array_str"},{"name":"asarray","description":"Convert the input to an array.","signature":"asarray(a[, dtype, order])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.asarray.html#jax.numpy.asarray"},{"name":"atleast_1d","description":"Convert inputs to arrays with at least one dimension.","signature":"atleast_1d(*arys)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.atleast_1d.html#jax.numpy.atleast_1d"},{"name":"atleast_2d","description":"View inputs as arrays with at least two dimensions.","signature":"atleast_2d(*arys)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.atleast_2d.html#jax.numpy.atleast_2d"},{"name":"atleast_3d","description":"View inputs as arrays with at least three dimensions.","signature":"atleast_3d(*arys)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.atleast_3d.html#jax.numpy.atleast_3d"},{"name":"bartlett","description":"Return the Bartlett window.","signature":"bartlett(*args, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.bartlett.html#jax.numpy.bartlett"},{"name":"bitwise_and","description":"Compute the bit-wise AND of two arrays element-wise.","signature":"bitwise_and(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.bitwise_and.html#jax.numpy.bitwise_and"},{"name":"bitwise_not","description":"Compute bit-wise inversion, or bit-wise NOT, element-wise.","signature":"bitwise_not(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.bitwise_not.html#jax.numpy.bitwise_not"},{"name":"bitwise_or","description":"Compute the bit-wise OR of two arrays element-wise.","signature":"bitwise_or(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.bitwise_or.html#jax.numpy.bitwise_or"},{"name":"bitwise_xor","description":"Compute the bit-wise XOR of two arrays element-wise.","signature":"bitwise_xor(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.bitwise_xor.html#jax.numpy.bitwise_xor"},{"name":"blackman","description":"Return the Blackman window.","signature":"blackman(*args, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.blackman.html#jax.numpy.blackman"},{"name":"block","description":"Assemble an nd-array from nested lists of blocks.","signature":"block(arrays)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.block.html#jax.numpy.block"},{"name":"broadcast_arrays","description":"Like Numpy’s broadcast_arrays but doesn’t return views.","signature":"broadcast_arrays(*args)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.broadcast_arrays.html#jax.numpy.broadcast_arrays"},{"name":"broadcast_to","description":"Like Numpy’s broadcast_to but doesn’t necessarily return views.","signature":"broadcast_to(arr, shape)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.broadcast_to.html#jax.numpy.broadcast_to"},{"name":"can_cast","description":"Returns True if cast between data types can occur according to the casting rule.","signature":"can_cast(from_, to[, casting])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.can_cast.html#jax.numpy.can_cast"},{"name":"ceil","description":"Return the ceiling of the input, element-wise.","signature":"ceil(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.ceil.html#jax.numpy.ceil"},{"name":"cholesky","description":"Cholesky decomposition.","signature":"cholesky(a)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.cholesky.html#jax.numpy.linalg.cholesky"},{"name":"clip","description":"Clip (limit) the values in an array.","signature":"clip(a[, a_min, a_max])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.clip.html#jax.numpy.clip"},{"name":"column_stack","description":"Stack 1-D arrays as columns into a 2-D array.","signature":"column_stack(tup)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.column_stack.html#jax.numpy.column_stack"},{"name":"concatenate","description":"Join a sequence of arrays along an existing axis.","signature":"concatenate(arrays[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.concatenate.html#jax.numpy.concatenate"},{"name":"cond","description":"Compute the condition number of a matrix.","signature":"cond(x[, p])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.cond.html#jax.numpy.linalg.cond"},{"name":"conj","description":"Return the complex conjugate, element-wise.","signature":"conj(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.conj.html#jax.numpy.conj"},{"name":"conjugate","description":"Return the complex conjugate, element-wise.","signature":"conjugate(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.conjugate.html#jax.numpy.conjugate"},{"name":"convolve","description":"Returns the discrete, linear convolution of two one-dimensional sequences.","signature":"convolve(x, y[, mode, precision])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.convolve.html#jax.numpy.convolve"},{"name":"copysign","description":"Change the sign of x1 to that of x2, element-wise.","signature":"copysign(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.copysign.html#jax.numpy.copysign"},{"name":"corrcoef","description":"Return Pearson product-moment correlation coefficients.","signature":"corrcoef(x[, y, rowvar])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.corrcoef.html#jax.numpy.corrcoef"},{"name":"correlate","description":"Cross-correlation of two 1-dimensional sequences.","signature":"correlate(x, y[, mode, precision])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.correlate.html#jax.numpy.correlate"},{"name":"cos","description":"Cosine element-wise.","signature":"cos(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.cos.html#jax.numpy.cos"},{"name":"cosh","description":"Hyperbolic cosine, element-wise.","signature":"cosh(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.cosh.html#jax.numpy.cosh"},{"name":"count_nonzero","description":"Counts the number of non-zero values in the array a.","signature":"count_nonzero(a[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.count_nonzero.html#jax.numpy.count_nonzero"},{"name":"cov","description":"Estimate a covariance matrix, given data and weights.","signature":"cov(m[, y, rowvar, bias, ddof, fweights, …])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.cov.html#jax.numpy.cov"},{"name":"cross","description":"Return the cross product of two (arrays of) vectors.","signature":"cross(a, b[, axisa, axisb, axisc, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.cross.html#jax.numpy.cross"},{"name":"cumprod","description":"Return the cumulative product of elements along a given axis.","signature":"cumprod(a[, axis, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.cumprod.html#jax.numpy.cumprod"},{"name":"cumproduct","description":"Return the cumulative product of elements along a given axis.","signature":"cumproduct(a[, axis, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.cumproduct.html#jax.numpy.cumproduct"},{"name":"cumsum","description":"Return the cumulative sum of the elements along a given axis.","signature":"cumsum(a[, axis, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.cumsum.html#jax.numpy.cumsum"},{"name":"deg2rad","description":"Convert angles from degrees to radians.","signature":"deg2rad(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.deg2rad.html#jax.numpy.deg2rad"},{"name":"degrees","description":"Convert angles from radians to degrees.","signature":"degrees(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.degrees.html#jax.numpy.degrees"},{"name":"det","description":"Compute the determinant of an array.","signature":"det","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.det.html#jax.numpy.linalg.det"},{"name":"diag","description":"Extract a diagonal or construct a diagonal array.","signature":"diag(v[, k])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.diag.html#jax.numpy.diag"},{"name":"diag_indices","description":"Return the indices to access the main diagonal of an array.","signature":"diag_indices(n[, ndim])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.diag_indices.html#jax.numpy.diag_indices"},{"name":"diagonal","description":"Return specified diagonals.","signature":"diagonal(a[, offset, axis1, axis2])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.diagonal.html#jax.numpy.diagonal"},{"name":"divide","description":"Returns a true division of the inputs, element-wise.","signature":"divide(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.divide.html#jax.numpy.divide"},{"name":"divmod","description":"Return element-wise quotient and remainder simultaneously.","signature":"divmod(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.divmod.html#jax.numpy.divmod"},{"name":"dot","description":"Dot product of two arrays.","signature":"dot(a, b, *[, precision])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.dot.html#jax.numpy.dot"},{"name":"dsplit","description":"Split array into multiple sub-arrays along the 3rd axis (depth).","signature":"dsplit(ary, indices_or_sections)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.dsplit.html#jax.numpy.dsplit"},{"name":"dstack","description":"Stack arrays in sequence depth wise (along third axis).","signature":"dstack(tup)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.dstack.html#jax.numpy.dstack"},{"name":"eig","description":"Compute the eigenvalues and right eigenvectors of a square array.","signature":"eig(a)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.eig.html#jax.numpy.linalg.eig"},{"name":"eigh","description":"Return the eigenvalues and eigenvectors of a complex Hermitian","signature":"eigh(a[, UPLO, symmetrize_input])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.eigh.html#jax.numpy.linalg.eigh"},{"name":"eigvals","description":"Compute the eigenvalues of a general matrix.","signature":"eigvals(a)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.eigvals.html#jax.numpy.linalg.eigvals"},{"name":"eigvalsh","description":"Compute the eigenvalues of a complex Hermitian or real symmetric matrix.","signature":"eigvalsh(a[, UPLO])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.eigvalsh.html#jax.numpy.linalg.eigvalsh"},{"name":"einsum","description":"Evaluates the Einstein summation convention on the operands.","signature":"einsum(*operands, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.einsum.html#jax.numpy.einsum"},{"name":"empty","description":"Return a new array of given shape and type, filled with zeros.","signature":"empty(shape[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.empty.html#jax.numpy.empty"},{"name":"empty_like","description":"Return an array of zeros with the same shape and type as a given array.","signature":"empty_like(x[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.empty_like.html#jax.numpy.empty_like"},{"name":"equal","description":"Return (x1 == x2) element-wise.","signature":"equal(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.equal.html#jax.numpy.equal"},{"name":"exp","description":"Calculate the exponential of all elements in the input array.","signature":"exp(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.exp.html#jax.numpy.exp"},{"name":"exp2","description":"Calculate 2**p for all p in the input array.","signature":"exp2(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.exp2.html#jax.numpy.exp2"},{"name":"expand_dims","description":"Expand the shape of an array.","signature":"expand_dims(a, axis)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.expand_dims.html#jax.numpy.expand_dims"},{"name":"expm1","description":"Calculate exp(x) - 1 for all elements in the array.","signature":"expm1(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.expm1.html#jax.numpy.expm1"},{"name":"eye","description":"Return a 2-D array with ones on the diagonal and zeros elsewhere.","signature":"eye(N[, M, k, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.eye.html#jax.numpy.eye"},{"name":"fabs","description":"Compute the absolute values element-wise.","signature":"fabs(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fabs.html#jax.numpy.fabs"},{"name":"fft","description":"Compute the one-dimensional discrete Fourier Transform.","signature":"fft(a[, n, axis, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.fft.html#jax.numpy.fft.fft"},{"name":"fft2","description":"Compute the 2-dimensional discrete Fourier Transform","signature":"fft2(a[, s, axes, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.fft2.html#jax.numpy.fft.fft2"},{"name":"fftfreq","description":"Return the Discrete Fourier Transform sample frequencies.","signature":"fftfreq(n[, d])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.fftfreq.html#jax.numpy.fft.fftfreq"},{"name":"fftn","description":"Compute the N-dimensional discrete Fourier Transform.","signature":"fftn(a[, s, axes, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.fftn.html#jax.numpy.fft.fftn"},{"name":"fftshift","description":"Shift the zero-frequency component to the center of the spectrum.","signature":"fftshift(x[, axes])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.fftshift.html#jax.numpy.fft.fftshift"},{"name":"fix","description":"Round to nearest integer towards zero.","signature":"fix(x[, out])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fix.html#jax.numpy.fix"},{"name":"flip","description":"Reverse the order of elements in an array along the given axis.","signature":"flip(m[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.flip.html#jax.numpy.flip"},{"name":"fliplr","description":"Flip array in the left/right direction.","signature":"fliplr(m)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fliplr.html#jax.numpy.fliplr"},{"name":"flipud","description":"Flip array in the up/down direction.","signature":"flipud(m)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.flipud.html#jax.numpy.flipud"},{"name":"float_power","description":"First array elements raised to powers from second array, element-wise.","signature":"float_power(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.float_power.html#jax.numpy.float_power"},{"name":"floor","description":"Return the floor of the input, element-wise.","signature":"floor(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.floor.html#jax.numpy.floor"},{"name":"floor_divide","description":"Return the largest integer smaller or equal to the division of the inputs.","signature":"floor_divide(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.floor_divide.html#jax.numpy.floor_divide"},{"name":"fmax","description":"Element-wise maximum of array elements.","signature":"fmax(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fmax.html#jax.numpy.fmax"},{"name":"fmin","description":"Element-wise minimum of array elements.","signature":"fmin(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fmin.html#jax.numpy.fmin"},{"name":"fmod","description":"Return the element-wise remainder of division.","signature":"fmod(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fmod.html#jax.numpy.fmod"},{"name":"frexp","description":"Decompose the elements of x into mantissa and twos exponent.","signature":"frexp(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.frexp.html#jax.numpy.frexp"},{"name":"full","description":"Return a new array of given shape and type, filled with fill_value.","signature":"full(shape, fill_value[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.full.html#jax.numpy.full"},{"name":"full_like","description":"Return a full array with the same shape and type as a given array.","signature":"full_like(a, fill_value[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.full_like.html#jax.numpy.full_like"},{"name":"gcd","description":"Returns the greatest common divisor of |x1| and |x2|","signature":"gcd(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.gcd.html#jax.numpy.gcd"},{"name":"geomspace","description":"Return numbers spaced evenly on a log scale (a geometric progression).","signature":"geomspace(start, stop[, num, endpoint, …])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.geomspace.html#jax.numpy.geomspace"},{"name":"greater","description":"Return the truth value of (x1 > x2) element-wise.","signature":"greater(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.greater.html#jax.numpy.greater"},{"name":"greater_equal","description":"Return the truth value of (x1 >= x2) element-wise.","signature":"greater_equal(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.greater_equal.html#jax.numpy.greater_equal"},{"name":"hamming","description":"Return the Hamming window.","signature":"hamming(*args, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.hamming.html#jax.numpy.hamming"},{"name":"hanning","description":"Return the Hanning window.","signature":"hanning(*args, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.hanning.html#jax.numpy.hanning"},{"name":"heaviside","description":"Compute the Heaviside step function.","signature":"heaviside(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.heaviside.html#jax.numpy.heaviside"},{"name":"hsplit","description":"Split an array into multiple sub-arrays horizontally (column-wise).","signature":"hsplit(ary, indices_or_sections)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.hsplit.html#jax.numpy.hsplit"},{"name":"hstack","description":"Stack arrays in sequence horizontally (column wise).","signature":"hstack(tup)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.hstack.html#jax.numpy.hstack"},{"name":"hypot","description":"Given the “legs” of a right triangle, return its hypotenuse.","signature":"hypot(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.hypot.html#jax.numpy.hypot"},{"name":"identity","description":"Return the identity array.","signature":"identity(n[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.identity.html#jax.numpy.identity"},{"name":"ifft","description":"Compute the one-dimensional inverse discrete Fourier Transform.","signature":"ifft(a[, n, axis, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.ifft.html#jax.numpy.fft.ifft"},{"name":"ifft2","description":"Compute the 2-dimensional inverse discrete Fourier Transform.","signature":"ifft2(a[, s, axes, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.ifft2.html#jax.numpy.fft.ifft2"},{"name":"ifftn","description":"Compute the N-dimensional inverse discrete Fourier Transform.","signature":"ifftn(a[, s, axes, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.ifftn.html#jax.numpy.fft.ifftn"},{"name":"ifftshift","description":"The inverse of fftshift. Although identical for even-length x, the","signature":"ifftshift(x[, axes])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.ifftshift.html#jax.numpy.fft.ifftshift"},{"name":"imag","description":"Return the imaginary part of the complex argument.","signature":"imag(val)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.imag.html#jax.numpy.imag"},{"name":"inner","description":"Inner product of two arrays.","signature":"inner(a, b, *[, precision])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.inner.html#jax.numpy.inner"},{"name":"inv","description":"Compute the (multiplicative) inverse of a matrix.","signature":"inv(a)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.inv.html#jax.numpy.linalg.inv"},{"name":"irfft","description":"Compute the inverse of the n-point DFT for real input.","signature":"irfft(a[, n, axis, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.irfft.html#jax.numpy.fft.irfft"},{"name":"irfft2","description":"Compute the 2-dimensional inverse FFT of a real array.","signature":"irfft2(a[, s, axes, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.irfft2.html#jax.numpy.fft.irfft2"},{"name":"irfftn","description":"Compute the inverse of the N-dimensional FFT of real input.","signature":"irfftn(a[, s, axes, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.irfftn.html#jax.numpy.fft.irfftn"},{"name":"isclose","description":"Returns a boolean array where two arrays are element-wise equal within a","signature":"isclose(a, b[, rtol, atol, equal_nan])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.isclose.html#jax.numpy.isclose"},{"name":"iscomplex","description":"Returns a bool array, where True if input element is complex.","signature":"iscomplex(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.iscomplex.html#jax.numpy.iscomplex"},{"name":"isfinite","description":"Test element-wise for finiteness (not infinity or not Not a Number).","signature":"isfinite(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.isfinite.html#jax.numpy.isfinite"},{"name":"isinf","description":"Test element-wise for positive or negative infinity.","signature":"isinf(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.isinf.html#jax.numpy.isinf"},{"name":"isnan","description":"Test element-wise for NaN and return result as a boolean array.","signature":"isnan(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.isnan.html#jax.numpy.isnan"},{"name":"isneginf","description":"Test element-wise for negative infinity, return result as bool array.","signature":"isneginf(infinity, x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.isneginf.html#jax.numpy.isneginf"},{"name":"isposinf","description":"Test element-wise for positive infinity, return result as bool array.","signature":"isposinf(infinity, x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.isposinf.html#jax.numpy.isposinf"},{"name":"isreal","description":"Returns a bool array, where True if input element is real.","signature":"isreal(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.isreal.html#jax.numpy.isreal"},{"name":"isscalar","description":"Returns True if the type of element is a scalar type.","signature":"isscalar(num)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.isscalar.html#jax.numpy.isscalar"},{"name":"issubdtype","description":"Returns True if first argument is a typecode lower/equal in type hierarchy.","signature":"issubdtype(arg1, arg2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.issubdtype.html#jax.numpy.issubdtype"},{"name":"issubsctype","description":"Determine if the first argument is a subclass of the second argument.","signature":"issubsctype(arg1, arg2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.issubsctype.html#jax.numpy.issubsctype"},{"name":"ix_","description":"Construct an open mesh from multiple sequences.","signature":"ix_(*args)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.ix_.html#jax.numpy.ix_"},{"name":"kaiser","description":"Return the Kaiser window.","signature":"kaiser(*args, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.kaiser.html#jax.numpy.kaiser"},{"name":"kron","description":"Kronecker product of two arrays.","signature":"kron(a, b)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.kron.html#jax.numpy.kron"},{"name":"lcm","description":"Returns the lowest common multiple of |x1| and |x2|","signature":"lcm(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.lcm.html#jax.numpy.lcm"},{"name":"ldexp","description":"Returns x1 * 2**x2, element-wise.","signature":"ldexp(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.ldexp.html#jax.numpy.ldexp"},{"name":"left_shift","description":"Shift the bits of an integer to the left.","signature":"left_shift(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.left_shift.html#jax.numpy.left_shift"},{"name":"less","description":"Return the truth value of (x1 < x2) element-wise.","signature":"less(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.less.html#jax.numpy.less"},{"name":"less_equal","description":"Return the truth value of (x1 =< x2) element-wise.","signature":"less_equal(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.less_equal.html#jax.numpy.less_equal"},{"name":"linspace","description":"Return evenly spaced numbers over a specified interval.","signature":"linspace(start, stop[, num, endpoint, …])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linspace.html#jax.numpy.linspace"},{"name":"log","description":"Natural logarithm, element-wise.","signature":"log(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.log.html#jax.numpy.log"},{"name":"log10","description":"Return the base 10 logarithm of the input array, element-wise.","signature":"log10(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.log10.html#jax.numpy.log10"},{"name":"log1p","description":"Return the natural logarithm of one plus the input array, element-wise.","signature":"log1p(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.log1p.html#jax.numpy.log1p"},{"name":"log2","description":"Base-2 logarithm of x.","signature":"log2(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.log2.html#jax.numpy.log2"},{"name":"logaddexp","description":"Logarithm of the sum of exponentiations of the inputs.","signature":"logaddexp","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.logaddexp.html#jax.numpy.logaddexp"},{"name":"logaddexp2","description":"Logarithm of the sum of exponentiations of the inputs in base-2.","signature":"logaddexp2","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.logaddexp2.html#jax.numpy.logaddexp2"},{"name":"logical_and","description":"Compute the truth value of x1 AND x2 element-wise.","signature":"logical_and(*args)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.logical_and.html#jax.numpy.logical_and"},{"name":"logical_not","description":"Compute the truth value of NOT x element-wise.","signature":"logical_not(*args)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.logical_not.html#jax.numpy.logical_not"},{"name":"logical_or","description":"Compute the truth value of x1 OR x2 element-wise.","signature":"logical_or(*args)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.logical_or.html#jax.numpy.logical_or"},{"name":"logical_xor","description":"Compute the truth value of x1 XOR x2, element-wise.","signature":"logical_xor(*args)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.logical_xor.html#jax.numpy.logical_xor"},{"name":"logspace","description":"Return numbers spaced evenly on a log scale.","signature":"logspace(start, stop[, num, endpoint, base, …])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.logspace.html#jax.numpy.logspace"},{"name":"matmul","description":"Matrix product of two arrays.","signature":"matmul(a, b, *[, precision])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.matmul.html#jax.numpy.matmul"},{"name":"matrix_power","description":"Raise a square matrix to the (integer) power n.","signature":"matrix_power(a, n)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.matrix_power.html#jax.numpy.linalg.matrix_power"},{"name":"matrix_rank","description":"Return matrix rank of array using SVD method","signature":"matrix_rank(M[, tol])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.matrix_rank.html#jax.numpy.linalg.matrix_rank"},{"name":"max","description":"Return the maximum of an array or maximum along an axis.","signature":"max(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.max.html#jax.numpy.max"},{"name":"maximum","description":"Element-wise maximum of array elements.","signature":"maximum(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.maximum.html#jax.numpy.maximum"},{"name":"mean","description":"Compute the arithmetic mean along the specified axis.","signature":"mean(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.mean.html#jax.numpy.mean"},{"name":"median","description":"Compute the median along the specified axis.","signature":"median(a[, axis, out, overwrite_input, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.median.html#jax.numpy.median"},{"name":"meshgrid","description":"Return coordinate matrices from coordinate vectors.","signature":"meshgrid(*args, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.meshgrid.html#jax.numpy.meshgrid"},{"name":"min","description":"Return the minimum of an array or minimum along an axis.","signature":"min(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.min.html#jax.numpy.min"},{"name":"minimum","description":"Element-wise minimum of array elements.","signature":"minimum(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.minimum.html#jax.numpy.minimum"},{"name":"mod","description":"Return element-wise remainder of division.","signature":"mod(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.mod.html#jax.numpy.mod"},{"name":"moveaxis","description":"Move axes of an array to new positions.","signature":"moveaxis(a, source, destination)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.moveaxis.html#jax.numpy.moveaxis"},{"name":"msort","description":"Return a copy of an array sorted along the first axis.","signature":"msort(a)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.msort.html#jax.numpy.msort"},{"name":"multi_dot","description":"Compute the dot product of two or more arrays in a single function call,","signature":"multi_dot(arrays, *[, precision])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.multi_dot.html#jax.numpy.linalg.multi_dot"},{"name":"multiply","description":"Multiply arguments element-wise.","signature":"multiply(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.multiply.html#jax.numpy.multiply"},{"name":"nan_to_num","description":"Replace NaN with zero and infinity with large finite numbers (default","signature":"nan_to_num(x[, copy])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nan_to_num.html#jax.numpy.nan_to_num"},{"name":"nancumprod","description":"Return the cumulative product of array elements over a given axis treating Not a","signature":"nancumprod(a[, axis, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nancumprod.html#jax.numpy.nancumprod"},{"name":"nancumsum","description":"Return the cumulative sum of array elements over a given axis treating Not a","signature":"nancumsum(a[, axis, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nancumsum.html#jax.numpy.nancumsum"},{"name":"nanmax","description":"Return the maximum of an array or maximum along an axis, ignoring any","signature":"nanmax(a[, axis, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nanmax.html#jax.numpy.nanmax"},{"name":"nanmin","description":"Return minimum of an array or minimum along an axis, ignoring any NaNs.","signature":"nanmin(a[, axis, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nanmin.html#jax.numpy.nanmin"},{"name":"nanprod","description":"Return the product of array elements over a given axis treating Not a","signature":"nanprod(a[, axis, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nanprod.html#jax.numpy.nanprod"},{"name":"nansum","description":"Return the sum of array elements over a given axis treating Not a","signature":"nansum(a[, axis, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nansum.html#jax.numpy.nansum"},{"name":"negative","description":"Numerical negative, element-wise.","signature":"negative(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.negative.html#jax.numpy.negative"},{"name":"nextafter","description":"Return the next floating-point value after x1 towards x2, element-wise.","signature":"nextafter(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nextafter.html#jax.numpy.nextafter"},{"name":"nonzero","description":"Return the indices of the elements that are non-zero.","signature":"nonzero(a)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.nonzero.html#jax.numpy.nonzero"},{"name":"norm","description":"Matrix or vector norm.","signature":"norm(x[, ord, axis, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.norm.html#jax.numpy.linalg.norm"},{"name":"not_equal","description":"Return (x1 != x2) element-wise.","signature":"not_equal(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.not_equal.html#jax.numpy.not_equal"},{"name":"ones","description":"Return a new array of given shape and type, filled with ones.","signature":"ones(shape[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.ones.html#jax.numpy.ones"},{"name":"ones_like","description":"Return an array of ones with the same shape and type as a given array.","signature":"ones_like(x[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.ones_like.html#jax.numpy.ones_like"},{"name":"outer","description":"Compute the outer product of two vectors.","signature":"outer(a, b[, out])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.outer.html#jax.numpy.outer"},{"name":"packbits","description":"Packs the elements of a binary-valued array into bits in a uint8 array.","signature":"packbits(a[, axis, bitorder])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.packbits.html#jax.numpy.packbits"},{"name":"pad","description":"Pad an array.","signature":"pad(array, pad_width[, mode, constant_values])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.pad.html#jax.numpy.pad"},{"name":"percentile","description":"Compute the q-th percentile of the data along the specified axis.","signature":"percentile(a, q[, axis, out, …])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.percentile.html#jax.numpy.percentile"},{"name":"pinv","description":"Compute the (Moore-Penrose) pseudo-inverse of a matrix.","signature":"pinv","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.pinv.html#jax.numpy.linalg.pinv"},{"name":"polyval","description":"Evaluate a polynomial at specific values.","signature":"polyval(p, x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.polyval.html#jax.numpy.polyval"},{"name":"positive","description":"Numerical positive, element-wise.","signature":"positive(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.positive.html#jax.numpy.positive"},{"name":"power","description":"First array elements raised to powers from second array, element-wise.","signature":"power(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.power.html#jax.numpy.power"},{"name":"prod","description":"Return the product of array elements over a given axis.","signature":"prod(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.prod.html#jax.numpy.prod"},{"name":"product","description":"Return the product of array elements over a given axis.","signature":"product(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.product.html#jax.numpy.product"},{"name":"promote_types","description":"Returns the type to which a binary operation should cast its arguments.","signature":"promote_types(a, b)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.promote_types.html#jax.numpy.promote_types"},{"name":"ptp","description":"Range of values (maximum - minimum) along an axis.","signature":"ptp(a[, axis, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.ptp.html#jax.numpy.ptp"},{"name":"qr","description":"Compute the qr factorization of a matrix.","signature":"qr(a[, mode])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.qr.html#jax.numpy.linalg.qr"},{"name":"quantile","description":"Compute the q-th quantile of the data along the specified axis.","signature":"quantile(a, q[, axis, out, overwrite_input, …])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.quantile.html#jax.numpy.quantile"},{"name":"rad2deg","description":"Convert angles from radians to degrees.","signature":"rad2deg(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.rad2deg.html#jax.numpy.rad2deg"},{"name":"radians","description":"Convert angles from degrees to radians.","signature":"radians(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.radians.html#jax.numpy.radians"},{"name":"ravel","description":"Return a contiguous flattened array.","signature":"ravel(a[, order])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.ravel.html#jax.numpy.ravel"},{"name":"real","description":"Return the real part of the complex argument.","signature":"real(val)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.real.html#jax.numpy.real"},{"name":"reciprocal","description":"Return the reciprocal of the argument, element-wise.","signature":"reciprocal(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.reciprocal.html#jax.numpy.reciprocal"},{"name":"remainder","description":"Return element-wise remainder of division.","signature":"remainder(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.remainder.html#jax.numpy.remainder"},{"name":"repeat","description":"Repeat elements of an array.","signature":"repeat(a, repeats[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.repeat.html#jax.numpy.repeat"},{"name":"reshape","description":"Gives a new shape to an array without changing its data.","signature":"reshape(a, newshape[, order])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.reshape.html#jax.numpy.reshape"},{"name":"result_type","description":"Returns the type that results from applying the NumPy","signature":"result_type(*args)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.result_type.html#jax.numpy.result_type"},{"name":"rfft","description":"Compute the one-dimensional discrete Fourier Transform for real input.","signature":"rfft(a[, n, axis, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.rfft.html#jax.numpy.fft.rfft"},{"name":"rfft2","description":"Compute the 2-dimensional FFT of a real array.","signature":"rfft2(a[, s, axes, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.rfft2.html#jax.numpy.fft.rfft2"},{"name":"rfftfreq","description":"Return the Discrete Fourier Transform sample frequencies","signature":"rfftfreq(n[, d])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.rfftfreq.html#jax.numpy.fft.rfftfreq"},{"name":"rfftn","description":"Compute the N-dimensional discrete Fourier Transform for real input.","signature":"rfftn(a[, s, axes, norm])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.rfftn.html#jax.numpy.fft.rfftn"},{"name":"right_shift","description":"Shift the bits of an integer to the right.","signature":"right_shift(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.right_shift.html#jax.numpy.right_shift"},{"name":"rint","description":"Round elements of the array to the nearest integer.","signature":"rint(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.rint.html#jax.numpy.rint"},{"name":"roll","description":"Roll array elements along a given axis.","signature":"roll(a, shift[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.roll.html#jax.numpy.roll"},{"name":"rollaxis","description":"Roll the specified axis backwards, until it lies in a given position.","signature":"rollaxis(a, axis[, start])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.rollaxis.html#jax.numpy.rollaxis"},{"name":"roots","description":"Return the roots of a polynomial with coefficients given in p.","signature":"roots(p, *[, strip_zeros])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.roots.html#jax.numpy.roots"},{"name":"rot90","description":"Rotate an array by 90 degrees in the plane specified by axes.","signature":"rot90(m[, k, axes])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.rot90.html#jax.numpy.rot90"},{"name":"round","description":"Round an array to the given number of decimals.","signature":"round(a[, decimals])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.round.html#jax.numpy.round"},{"name":"row_stack","description":"Stack arrays in sequence vertically (row wise).","signature":"row_stack(tup)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.row_stack.html#jax.numpy.row_stack"},{"name":"select","description":"Return an array drawn from elements in choicelist, depending on conditions.","signature":"select(condlist, choicelist[, default])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.select.html#jax.numpy.select"},{"name":"sign","description":"Returns an element-wise indication of the sign of a number.","signature":"sign(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.sign.html#jax.numpy.sign"},{"name":"signbit","description":"Returns element-wise True where signbit is set (less than zero).","signature":"signbit(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.signbit.html#jax.numpy.signbit"},{"name":"sin","description":"Trigonometric sine, element-wise.","signature":"sin(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.sin.html#jax.numpy.sin"},{"name":"sinc","description":"Return the sinc function.","signature":"sinc(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.sinc.html#jax.numpy.sinc"},{"name":"sinh","description":"Hyperbolic sine, element-wise.","signature":"sinh(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.sinh.html#jax.numpy.sinh"},{"name":"slogdet","description":"Compute the sign and (natural) logarithm of the determinant of an array.","signature":"slogdet","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.slogdet.html#jax.numpy.linalg.slogdet"},{"name":"solve","description":"Solve a linear matrix equation, or system of linear scalar equations.","signature":"solve(a, b)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.solve.html#jax.numpy.linalg.solve"},{"name":"sometrue","description":"Test whether any array element along a given axis evaluates to True.","signature":"sometrue(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.sometrue.html#jax.numpy.sometrue"},{"name":"sort","description":"Return a sorted copy of an array.","signature":"sort(a[, axis, kind, order])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.sort.html#jax.numpy.sort"},{"name":"split","description":"Split an array into multiple sub-arrays as views into ary.","signature":"split(ary, indices_or_sections[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.split.html#jax.numpy.split"},{"name":"sqrt","description":"Return the non-negative square-root of an array, element-wise.","signature":"sqrt(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.sqrt.html#jax.numpy.sqrt"},{"name":"square","description":"Return the element-wise square of the input.","signature":"square(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.square.html#jax.numpy.square"},{"name":"squeeze","description":"Remove single-dimensional entries from the shape of an array.","signature":"squeeze(a[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.squeeze.html#jax.numpy.squeeze"},{"name":"stack","description":"Join a sequence of arrays along a new axis.","signature":"stack(arrays[, axis])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.stack.html#jax.numpy.stack"},{"name":"std","description":"Compute the standard deviation along the specified axis.","signature":"std(a[, axis, dtype, out, ddof, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.std.html#jax.numpy.std"},{"name":"subtract","description":"Subtract arguments, element-wise.","signature":"subtract(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.subtract.html#jax.numpy.subtract"},{"name":"sum","description":"Sum of array elements over a given axis.","signature":"sum(a[, axis, dtype, out, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.sum.html#jax.numpy.sum"},{"name":"svd","description":"Singular Value Decomposition.","signature":"svd(a[, full_matrices, compute_uv])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.svd.html#jax.numpy.linalg.svd"},{"name":"swapaxes","description":"Interchange two axes of an array.","signature":"swapaxes(a, axis1, axis2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.swapaxes.html#jax.numpy.swapaxes"},{"name":"take","description":"Take elements from an array along an axis.","signature":"take(a, indices[, axis, out, mode])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.take.html#jax.numpy.take"},{"name":"take_along_axis","description":"Take values from the input array by matching 1d index and data slices.","signature":"take_along_axis(arr, indices, axis)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.take_along_axis.html#jax.numpy.take_along_axis"},{"name":"tan","description":"Compute tangent element-wise.","signature":"tan(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.tan.html#jax.numpy.tan"},{"name":"tanh","description":"Compute hyperbolic tangent element-wise.","signature":"tanh(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.tanh.html#jax.numpy.tanh"},{"name":"tensordot","description":"Compute tensor dot product along specified axes.","signature":"tensordot(a, b[, axes, precision])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.tensordot.html#jax.numpy.tensordot"},{"name":"tensorinv","description":"Compute the ‘inverse’ of an N-dimensional array.","signature":"tensorinv(a[, ind])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.tensorinv.html#jax.numpy.linalg.tensorinv"},{"name":"tensorsolve","description":"Solve the tensor equation a x = b for x.","signature":"tensorsolve(a, b[, axes])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.linalg.tensorsolve.html#jax.numpy.linalg.tensorsolve"},{"name":"tile","description":"Construct an array by repeating A the number of times given by reps.","signature":"tile(a, reps)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.tile.html#jax.numpy.tile"},{"name":"trace","description":"Return the sum along diagonals of the array.","signature":"trace(a[, offset, axis1, axis2, dtype, out])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.trace.html#jax.numpy.trace"},{"name":"transpose","description":"Permute the dimensions of an array.","signature":"transpose(a[, axes])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.transpose.html#jax.numpy.transpose"},{"name":"tri","description":"An array with ones at and below the given diagonal and zeros elsewhere.","signature":"tri(N[, M, k, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.tri.html#jax.numpy.tri"},{"name":"tril","description":"Lower triangle of an array.","signature":"tril(m[, k])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.tril.html#jax.numpy.tril"},{"name":"tril_indices","description":"Return the indices for the lower-triangle of an (n, m) array.","signature":"tril_indices(*args, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.tril_indices.html#jax.numpy.tril_indices"},{"name":"triu","description":"Upper triangle of an array.","signature":"triu(m[, k])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.triu.html#jax.numpy.triu"},{"name":"triu_indices","description":"Return the indices for the upper-triangle of an (n, m) array.","signature":"triu_indices(*args, **kwargs)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.triu_indices.html#jax.numpy.triu_indices"},{"name":"true_divide","description":"Returns a true division of the inputs, element-wise.","signature":"true_divide(x1, x2)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.true_divide.html#jax.numpy.true_divide"},{"name":"trunc","description":"Return the truncated value of the input, element-wise.","signature":"trunc(x)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.trunc.html#jax.numpy.trunc"},{"name":"unpackbits","description":"Unpacks elements of a uint8 array into a binary-valued output array.","signature":"unpackbits(a[, axis, count, bitorder])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.unpackbits.html#jax.numpy.unpackbits"},{"name":"vander","description":"Generate a Vandermonde matrix.","signature":"vander(x[, N, increasing])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.vander.html#jax.numpy.vander"},{"name":"var","description":"Compute the variance along the specified axis.","signature":"var(a[, axis, dtype, out, ddof, keepdims])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.var.html#jax.numpy.var"},{"name":"vdot","description":"Return the dot product of two vectors.","signature":"vdot(a, b, *[, precision])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.vdot.html#jax.numpy.vdot"},{"name":"vsplit","description":"Split an array into multiple sub-arrays vertically (row-wise).","signature":"vsplit(ary, indices_or_sections)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.vsplit.html#jax.numpy.vsplit"},{"name":"vstack","description":"Stack arrays in sequence vertically (row wise).","signature":"vstack(tup)","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.vstack.html#jax.numpy.vstack"},{"name":"where","description":"Return elements chosen from x or y depending on condition.","signature":"where(condition[, x, y])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.where.html#jax.numpy.where"},{"name":"zeros","description":"Return a new array of given shape and type, filled with zeros.","signature":"zeros(shape[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.zeros.html#jax.numpy.zeros"},{"name":"zeros_like","description":"Return an array of zeros with the same shape and type as a given array.","signature":"zeros_like(x[, dtype])","url":"https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.zeros_like.html#jax.numpy.zeros_like"}]