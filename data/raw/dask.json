[{"name":"all","description":"Test whether all array elements along a given axis evaluate to True.","signature":"all(a[, axis, keepdims, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.all"},{"name":"allclose","description":"Returns True if two arrays are element-wise equal within a tolerance.","signature":"allclose(arr1, arr2[, rtol, atol, equal_nan])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.allclose"},{"name":"angle","description":"Return the angle of the complex argument.","signature":"angle(x[, deg])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.angle"},{"name":"any","description":"Test whether any array element along a given axis evaluates to True.","signature":"any(a[, axis, keepdims, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.any"},{"name":"apply_along_axis","description":"Apply a function to 1-D slices along the given axis.","signature":"apply_along_axis(func1d, axis, arr, *args[, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.apply_along_axis"},{"name":"apply_gufunc","description":"Apply a generalized ufunc or similar python function to arrays.","signature":"apply_gufunc(func, signature, *args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.gufunc.apply_gufunc"},{"name":"apply_over_axes","description":"Apply a function repeatedly over multiple axes.","signature":"apply_over_axes(func, a, axes)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.apply_over_axes"},{"name":"arange","description":"Return evenly spaced values from start to stop with step size step.","signature":"arange(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.arange"},{"name":"arccos","description":"This docstring was copied from numpy.arccos.","signature":"arccos(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.arccos"},{"name":"arccosh","description":"This docstring was copied from numpy.arccosh.","signature":"arccosh(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.arccosh"},{"name":"arcsin","description":"This docstring was copied from numpy.arcsin.","signature":"arcsin(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.arcsin"},{"name":"arcsinh","description":"This docstring was copied from numpy.arcsinh.","signature":"arcsinh(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.arcsinh"},{"name":"arctan","description":"This docstring was copied from numpy.arctan.","signature":"arctan(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.arctan"},{"name":"arctan2","description":"This docstring was copied from numpy.arctan2.","signature":"arctan2(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.arctan2"},{"name":"arctanh","description":"This docstring was copied from numpy.arctanh.","signature":"arctanh(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.arctanh"},{"name":"argmax","description":"Return the maximum of an array or maximum along an axis.","signature":"argmax(x[, axis, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.argmax"},{"name":"argmin","description":"Return the minimum of an array or minimum along an axis.","signature":"argmin(x[, axis, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.argmin"},{"name":"argtopk","description":"Extract the indices of the k largest elements from a on the given axis, and return them sorted from largest to smallest.","signature":"argtopk(a, k[, axis, split_every])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.argtopk"},{"name":"argwhere","description":"Find the indices of array elements that are non-zero, grouped by element.","signature":"argwhere(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.argwhere"},{"name":"around","description":"Evenly round to the given number of decimals.","signature":"around(x[, decimals])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.around"},{"name":"array","description":"This docstring was copied from numpy.array.","signature":"array(object[, dtype, copy, order, subok, ndmin])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.array"},{"name":"as_gufunc","description":"Decorator for dask.array.gufunc.","signature":"as_gufunc([signature])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.gufunc.as_gufunc"},{"name":"asanyarray","description":"Convert the input to a dask array.","signature":"asanyarray(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.asanyarray"},{"name":"asarray","description":"Convert the input to a dask array.","signature":"asarray(a, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.asarray"},{"name":"atleast_1d","description":"Convert inputs to arrays with at least one dimension.","signature":"atleast_1d(*arys)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.atleast_1d"},{"name":"atleast_2d","description":"View inputs as arrays with at least two dimensions.","signature":"atleast_2d(*arys)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.atleast_2d"},{"name":"atleast_3d","description":"View inputs as arrays with at least three dimensions.","signature":"atleast_3d(*arys)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.atleast_3d"},{"name":"average","description":"Compute the weighted average along the specified axis.","signature":"average(a[, axis, weights, returned])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.average"},{"name":"bincount","description":"This docstring was copied from numpy.bincount.","signature":"bincount(x[, weights, minlength])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.bincount"},{"name":"bitwise_and","description":"This docstring was copied from numpy.bitwise_and.","signature":"bitwise_and(x1, x2, /[, out, where, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.bitwise_and"},{"name":"bitwise_not","description":"This docstring was copied from numpy.invert.","signature":"bitwise_not(x, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.bitwise_not"},{"name":"bitwise_or","description":"This docstring was copied from numpy.bitwise_or.","signature":"bitwise_or(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.bitwise_or"},{"name":"bitwise_xor","description":"This docstring was copied from numpy.bitwise_xor.","signature":"bitwise_xor(x1, x2, /[, out, where, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.bitwise_xor"},{"name":"block","description":"Assemble an nd-array from nested lists of blocks.","signature":"block(arrays[, allow_unknown_chunksizes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.block"},{"name":"blockwise","description":"Tensor operation: Generalized inner and outer products","signature":"blockwise(func, out_ind, *args[, name, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.blockwise"},{"name":"blockwise","description":"Tensor operation: Generalized inner and outer products","signature":"blockwise(func, out_ind, *args[, name, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.core.blockwise"},{"name":"broadcast_arrays","description":"Broadcast any number of arrays against each other.","signature":"broadcast_arrays(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.broadcast_arrays"},{"name":"broadcast_to","description":"Broadcast an array to a new shape.","signature":"broadcast_to(x, shape[, chunks])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.broadcast_to"},{"name":"ceil","description":"This docstring was copied from numpy.ceil.","signature":"ceil(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ceil"},{"name":"choose","description":"Construct an array from an index array and a set of arrays to choose from.","signature":"choose(a, choices)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.choose"},{"name":"clip","description":"Clip (limit) the values in an array.","signature":"clip(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.clip"},{"name":"coarsen","description":"Coarsen array by applying reduction to fixed size neighborhoods","signature":"coarsen(reduction, x, axes[, trim_excess])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.coarsen"},{"name":"compress","description":"Return selected slices of an array along given axis.","signature":"compress(condition, a[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.compress"},{"name":"concatenate","description":"Concatenate arrays along an existing axis","signature":"concatenate(seq[, axis, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.concatenate"},{"name":"conj","description":"This docstring was copied from numpy.conjugate.","signature":"conj(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.conj"},{"name":"copysign","description":"This docstring was copied from numpy.copysign.","signature":"copysign(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.copysign"},{"name":"corrcoef","description":"Return Pearson product-moment correlation coefficients.","signature":"corrcoef(x[, y, rowvar])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.corrcoef"},{"name":"cos","description":"This docstring was copied from numpy.cos.","signature":"cos(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.cos"},{"name":"cosh","description":"This docstring was copied from numpy.cosh.","signature":"cosh(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.cosh"},{"name":"count_nonzero","description":"Counts the number of non-zero values in the array a.","signature":"count_nonzero(a[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.count_nonzero"},{"name":"cov","description":"Estimate a covariance matrix, given data and weights.","signature":"cov(m[, y, rowvar, bias, ddof])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.cov"},{"name":"cumprod","description":"Return the cumulative product of elements along a given axis.","signature":"cumprod(x[, axis, dtype, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.cumprod"},{"name":"cumsum","description":"Return the cumulative sum of the elements along a given axis.","signature":"cumsum(x[, axis, dtype, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.cumsum"},{"name":"deg2rad","description":"This docstring was copied from numpy.deg2rad.","signature":"deg2rad(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.deg2rad"},{"name":"degrees","description":"This docstring was copied from numpy.degrees.","signature":"degrees(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.degrees"},{"name":"diag","description":"Extract a diagonal or construct a diagonal array.","signature":"diag(v)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.diag"},{"name":"diagonal","description":"Return specified diagonals.","signature":"diagonal(a[, offset, axis1, axis2])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.diagonal"},{"name":"diff","description":"Calculate the n-th discrete difference along the given axis.","signature":"diff(a[, n, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.diff"},{"name":"digitize","description":"Return the indices of the bins to which each value in input array belongs.","signature":"digitize(a, bins[, right])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.digitize"},{"name":"dot","description":"This docstring was copied from numpy.dot.","signature":"dot(a, b[, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.dot"},{"name":"dstack","description":"Stack arrays in sequence depth wise (along third axis).","signature":"dstack(tup[, allow_unknown_chunksizes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.dstack"},{"name":"ediff1d","description":"The differences between consecutive elements of an array.","signature":"ediff1d(ary[, to_end, to_begin])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ediff1d"},{"name":"einsum","description":"This docstring was copied from numpy.einsum.","signature":"einsum(subscripts, *operands[, out, dtype, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.einsum"},{"name":"empty","description":"Blocked variant of empty","signature":"empty(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.empty"},{"name":"empty_like","description":"Return a new array with the same shape and type as a given array.","signature":"empty_like(a[, dtype, chunks])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.empty_like"},{"name":"exp","description":"This docstring was copied from numpy.exp.","signature":"exp(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.exp"},{"name":"expm1","description":"This docstring was copied from numpy.expm1.","signature":"expm1(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.expm1"},{"name":"eye","description":"Return a 2-D Array with ones on the diagonal and zeros elsewhere.","signature":"eye(N[, chunks, M, k, dtype])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.eye"},{"name":"fabs","description":"This docstring was copied from numpy.fabs.","signature":"fabs(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fabs"},{"name":"fft.fft","description":"Wrapping of numpy.fft.fft","signature":"fft.fft(a[, n, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.fft"},{"name":"fft.fft2","description":"Wrapping of numpy.fft.fft2","signature":"fft.fft2(a[, s, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.fft2"},{"name":"fft.fft_wrap","description":"Wrap 1D, 2D, and ND real and complex FFT functions","signature":"fft.fft_wrap(fft_func[, kind, dtype])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.fft_wrap"},{"name":"fft.fftfreq","description":"Return the Discrete Fourier Transform sample frequencies.","signature":"fft.fftfreq(n[, d, chunks])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.fftfreq"},{"name":"fft.fftn","description":"Wrapping of numpy.fft.fftn","signature":"fft.fftn(a[, s, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.fftn"},{"name":"fft.fftshift","description":"Shift the zero-frequency component to the center of the spectrum.","signature":"fft.fftshift(x[, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.fftshift"},{"name":"fft.hfft","description":"Wrapping of numpy.fft.hfft","signature":"fft.hfft(a[, n, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.hfft"},{"name":"fft.ifft","description":"Wrapping of numpy.fft.ifft","signature":"fft.ifft(a[, n, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.ifft"},{"name":"fft.ifft2","description":"Wrapping of numpy.fft.ifft2","signature":"fft.ifft2(a[, s, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.ifft2"},{"name":"fft.ifftn","description":"Wrapping of numpy.fft.ifftn","signature":"fft.ifftn(a[, s, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.ifftn"},{"name":"fft.ifftshift","description":"The inverse of fftshift.","signature":"fft.ifftshift(x[, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.ifftshift"},{"name":"fft.ihfft","description":"Wrapping of numpy.fft.ihfft","signature":"fft.ihfft(a[, n, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.ihfft"},{"name":"fft.irfft","description":"Wrapping of numpy.fft.irfft","signature":"fft.irfft(a[, n, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.irfft"},{"name":"fft.irfft2","description":"Wrapping of numpy.fft.irfft2","signature":"fft.irfft2(a[, s, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.irfft2"},{"name":"fft.irfftn","description":"Wrapping of numpy.fft.irfftn","signature":"fft.irfftn(a[, s, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.irfftn"},{"name":"fft.rfft","description":"Wrapping of numpy.fft.rfft","signature":"fft.rfft(a[, n, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.rfft"},{"name":"fft.rfft2","description":"Wrapping of numpy.fft.rfft2","signature":"fft.rfft2(a[, s, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.rfft2"},{"name":"fft.rfftfreq","description":"Return the Discrete Fourier Transform sample frequencies (for usage with rfft, irfft).","signature":"fft.rfftfreq(n[, d, chunks])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.rfftfreq"},{"name":"fft.rfftn","description":"Wrapping of numpy.fft.rfftn","signature":"fft.rfftn(a[, s, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fft.rfftn"},{"name":"fix","description":"Round to nearest integer towards zero.","signature":"fix(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fix"},{"name":"flatnonzero","description":"Return indices that are non-zero in the flattened version of a.","signature":"flatnonzero(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.flatnonzero"},{"name":"flip","description":"Reverse element order along axis.","signature":"flip(m, axis)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.flip"},{"name":"fliplr","description":"Flip array in the left/right direction.","signature":"fliplr(m)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fliplr"},{"name":"flipud","description":"Flip array in the up/down direction.","signature":"flipud(m)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.flipud"},{"name":"floor","description":"This docstring was copied from numpy.floor.","signature":"floor(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.floor"},{"name":"fmax","description":"This docstring was copied from numpy.fmax.","signature":"fmax(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fmax"},{"name":"fmin","description":"This docstring was copied from numpy.fmin.","signature":"fmin(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fmin"},{"name":"fmod","description":"This docstring was copied from numpy.fmod.","signature":"fmod(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fmod"},{"name":"frexp","description":"This docstring was copied from numpy.frexp.","signature":"frexp(x[, out1, out2], / [[, out, where, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.frexp"},{"name":"from_array","description":"Create dask array from something that looks like an array","signature":"from_array(x[, chunks, name, lock, asarray, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.from_array"},{"name":"from_delayed","description":"Create a dask array from a dask delayed value","signature":"from_delayed(value, shape[, dtype, meta, name])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.from_delayed"},{"name":"from_npy_stack","description":"Load dask array from stack of npy files","signature":"from_npy_stack(dirname[, mmap_mode])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.from_npy_stack"},{"name":"from_tiledb","description":"Load array from the TileDB storage format","signature":"from_tiledb(uri[, attribute, chunks, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.from_tiledb"},{"name":"from_zarr","description":"Load array from the zarr storage format","signature":"from_zarr(url[, component, storage_options, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.from_zarr"},{"name":"fromfunction","description":"Construct an array by executing a function over each coordinate.","signature":"fromfunction(func[, chunks, shape, dtype])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.fromfunction"},{"name":"frompyfunc","description":"This docstring was copied from numpy.frompyfunc.","signature":"frompyfunc(func, nin, nout)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.frompyfunc"},{"name":"full","description":"Blocked variant of full","signature":"full(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.full"},{"name":"full_like","description":"Return a full array with the same shape and type as a given array.","signature":"full_like(a, fill_value[, dtype, chunks])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.full_like"},{"name":"gradient","description":"Return the gradient of an N-dimensional array.","signature":"gradient(f, *varargs, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.gradient"},{"name":"gufunc","description":"Binds pyfunc into dask.array.apply_gufunc when called.","signature":"gufunc(pyfunc, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.gufunc.gufunc"},{"name":"histogram","description":"Blocked variant of numpy.histogram().","signature":"histogram(a[, bins, range, normed, weights, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.histogram"},{"name":"hstack","description":"Stack arrays in sequence horizontally (column wise).","signature":"hstack(tup[, allow_unknown_chunksizes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.hstack"},{"name":"hypot","description":"This docstring was copied from numpy.hypot.","signature":"hypot(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.hypot"},{"name":"imag","description":"Return the imaginary part of the complex argument.","signature":"imag(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.imag"},{"name":"image.imread","description":"Read a stack of images into a dask array","signature":"image.imread(filename[, imread, preprocess])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.image.imread"},{"name":"indices","description":"Implements NumPy’s indices for Dask Arrays.","signature":"indices(dimensions[, dtype, chunks])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.indices"},{"name":"insert","description":"Insert values along the given axis before the given indices.","signature":"insert(arr, obj, values, axis)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.insert"},{"name":"invert","description":"This docstring was copied from numpy.invert.","signature":"invert(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.invert"},{"name":"isclose","description":"Returns a boolean array where two arrays are element-wise equal within a tolerance.","signature":"isclose(arr1, arr2[, rtol, atol, equal_nan])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isclose"},{"name":"iscomplex","description":"Returns a bool array, where True if input element is complex.","signature":"iscomplex(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.iscomplex"},{"name":"isfinite","description":"This docstring was copied from numpy.isfinite.","signature":"isfinite(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isfinite"},{"name":"isin","description":"Calculates element in test_elements, broadcasting over element only.","signature":"isin(element, test_elements[, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isin"},{"name":"isinf","description":"This docstring was copied from numpy.isinf.","signature":"isinf(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isinf"},{"name":"isnan","description":"This docstring was copied from numpy.isnan.","signature":"isnan(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isnan"},{"name":"isneginf","description":"This docstring was copied from numpy.equal.","signature":"isneginf","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isneginf"},{"name":"isnull","description":"pandas.isnull for dask arrays","signature":"isnull(values)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isnull"},{"name":"isposinf","description":"This docstring was copied from numpy.equal.","signature":"isposinf","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isposinf"},{"name":"isreal","description":"Returns a bool array, where True if input element is real.","signature":"isreal(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.isreal"},{"name":"ldexp","description":"This docstring was copied from numpy.ldexp.","signature":"ldexp(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ldexp"},{"name":"linalg.cholesky","description":"Returns the Cholesky decomposition, A=LL∗ or A=U∗U of a Hermitian positive-definite matrix A.","signature":"linalg.cholesky(a[, lower])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.cholesky"},{"name":"linalg.inv","description":"Compute the inverse of a matrix with LU decomposition and forward / backward substitutions.","signature":"linalg.inv(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.inv"},{"name":"linalg.lstsq","description":"Return the least-squares solution to a linear matrix equation using QR decomposition.","signature":"linalg.lstsq(a, b)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.lstsq"},{"name":"linalg.lu","description":"Compute the lu decomposition of a matrix.","signature":"linalg.lu(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.lu"},{"name":"linalg.norm","description":"Matrix or vector norm.","signature":"linalg.norm(x[, ord, axis, keepdims])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.norm"},{"name":"linalg.qr","description":"Compute the qr factorization of a matrix.","signature":"linalg.qr(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.qr"},{"name":"linalg.sfqr","description":"Direct Short-and-Fat QR","signature":"linalg.sfqr(data[, name])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.sfqr"},{"name":"linalg.solve","description":"Solve the equation a x = b for x.","signature":"linalg.solve(a, b[, sym_pos])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.solve"},{"name":"linalg.solve_triangular","description":"Solve the equation a x = b for x, assuming a is a triangular matrix.","signature":"linalg.solve_triangular(a, b[, lower])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.solve_triangular"},{"name":"linalg.svd","description":"Compute the singular value decomposition of a matrix.","signature":"linalg.svd(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.svd"},{"name":"linalg.svd_compressed","description":"Randomly compressed rank-k thin Singular Value Decomposition.","signature":"linalg.svd_compressed(a, k[, n_power_iter, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.svd_compressed"},{"name":"linalg.tsqr","description":"Direct Tall-and-Skinny QR algorithm","signature":"linalg.tsqr(data[, compute_svd, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.tsqr"},{"name":"linspace","description":"Return num evenly spaced values over the closed interval [start, stop].","signature":"linspace(start, stop[, num, endpoint, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.linspace"},{"name":"log","description":"This docstring was copied from numpy.log.","signature":"log(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.log"},{"name":"log10","description":"This docstring was copied from numpy.log10.","signature":"log10(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.log10"},{"name":"log1p","description":"This docstring was copied from numpy.log1p.","signature":"log1p(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.log1p"},{"name":"log2","description":"This docstring was copied from numpy.log2.","signature":"log2(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.log2"},{"name":"logaddexp","description":"This docstring was copied from numpy.logaddexp.","signature":"logaddexp(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.logaddexp"},{"name":"logaddexp2","description":"This docstring was copied from numpy.logaddexp2.","signature":"logaddexp2(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.logaddexp2"},{"name":"logical_and","description":"This docstring was copied from numpy.logical_and.","signature":"logical_and(x1, x2, /[, out, where, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.logical_and"},{"name":"logical_not","description":"This docstring was copied from numpy.logical_not.","signature":"logical_not(x, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.logical_not"},{"name":"logical_or","description":"This docstring was copied from numpy.logical_or.","signature":"logical_or(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.logical_or"},{"name":"logical_xor","description":"This docstring was copied from numpy.logical_xor.","signature":"logical_xor(x1, x2, /[, out, where, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.logical_xor"},{"name":"ma.average","description":"Return the weighted average of array over the given axis.","signature":"ma.average(a[, axis, weights, returned])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.average"},{"name":"ma.filled","description":"Return input as an array with masked data replaced by a fill value.","signature":"ma.filled(a[, fill_value])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.filled"},{"name":"ma.fix_invalid","description":"Return input with invalid data masked and replaced by a fill value.","signature":"ma.fix_invalid(a[, fill_value])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.fix_invalid"},{"name":"ma.getdata","description":"Return the data of a masked array as an ndarray.","signature":"ma.getdata(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.getdata"},{"name":"ma.getmaskarray","description":"Return the mask of a masked array, or full boolean array of False.","signature":"ma.getmaskarray(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.getmaskarray"},{"name":"ma.masked_array","description":"An array class with possibly masked values.","signature":"ma.masked_array(data[, mask, fill_value])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_array"},{"name":"ma.masked_equal","description":"Mask an array where equal to a given value.","signature":"ma.masked_equal(a, value)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_equal"},{"name":"ma.masked_greater","description":"Mask an array where greater than a given value.","signature":"ma.masked_greater(x, value[, copy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_greater"},{"name":"ma.masked_greater_equal","description":"Mask an array where greater than or equal to a given value.","signature":"ma.masked_greater_equal(x, value[, copy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_greater_equal"},{"name":"ma.masked_inside","description":"Mask an array inside a given interval.","signature":"ma.masked_inside(x, v1, v2)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_inside"},{"name":"ma.masked_invalid","description":"Mask an array where invalid values occur (NaNs or infs).","signature":"ma.masked_invalid(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_invalid"},{"name":"ma.masked_less","description":"Mask an array where less than a given value.","signature":"ma.masked_less(x, value[, copy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_less"},{"name":"ma.masked_less_equal","description":"Mask an array where less than or equal to a given value.","signature":"ma.masked_less_equal(x, value[, copy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_less_equal"},{"name":"ma.masked_not_equal","description":"Mask an array where not equal to a given value.","signature":"ma.masked_not_equal(x, value[, copy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_not_equal"},{"name":"ma.masked_outside","description":"Mask an array outside a given interval.","signature":"ma.masked_outside(x, v1, v2)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_outside"},{"name":"ma.masked_values","description":"Mask using floating point equality.","signature":"ma.masked_values(x, value[, rtol, atol, shrink])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_values"},{"name":"ma.masked_where","description":"Mask an array where a condition is met.","signature":"ma.masked_where(condition, a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.masked_where"},{"name":"ma.set_fill_value","description":"Set the filling value of a, if a is a masked array.","signature":"ma.set_fill_value(a, fill_value)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ma.set_fill_value"},{"name":"map_blocks","description":"Map a function across all blocks of a dask array.","signature":"map_blocks(func, *args[, name, token, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.map_blocks"},{"name":"map_overlap","description":"Map a function over blocks of the array with some overlap","signature":"map_overlap(x, func, depth[, boundary, trim])","url":"https://docs.dask.org/en/latest/array-api.htmlarray-overlap.html#dask.array.map_overlap"},{"name":"matmul","description":"This docstring was copied from numpy.matmul.","signature":"matmul(x1, x2, /[, out, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.matmul"},{"name":"max","description":"Return the maximum of an array or maximum along an axis.","signature":"max(a[, axis, keepdims, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.max"},{"name":"maximum","description":"This docstring was copied from numpy.maximum.","signature":"maximum(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.maximum"},{"name":"mean","description":"Compute the arithmetic mean along the specified axis.","signature":"mean(a[, axis, dtype, keepdims, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.mean"},{"name":"median","description":"Compute the median along the specified axis.","signature":"median(a[, axis, keepdims, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.median"},{"name":"meshgrid","description":"Return coordinate matrices from coordinate vectors.","signature":"meshgrid(*xi, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.meshgrid"},{"name":"min","description":"Return the minimum of an array or minimum along an axis.","signature":"min(a[, axis, keepdims, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.min"},{"name":"minimum","description":"This docstring was copied from numpy.minimum.","signature":"minimum(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.minimum"},{"name":"modf","description":"This docstring was copied from numpy.modf.","signature":"modf(x[, out1, out2], / [[, out, where, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.modf"},{"name":"moment","description":"","signature":"moment(a, order[, axis, dtype, keepdims, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.moment"},{"name":"moveaxis","description":"Move axes of an array to new positions.","signature":"moveaxis(a, source, destination)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.moveaxis"},{"name":"nan_to_num","description":"Replace NaN with zero and infinity with large finite numbers (default behaviour) or with the numbers defined by the user using the nan,  posinf and/or neginf keywords.","signature":"nan_to_num(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nan_to_num"},{"name":"nanargmax","description":"Return the maximum of an array or maximum along an axis, ignoring any NaNs.","signature":"nanargmax(x[, axis, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanargmax"},{"name":"nanargmin","description":"Return minimum of an array or minimum along an axis, ignoring any NaNs.","signature":"nanargmin(x[, axis, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanargmin"},{"name":"nancumprod","description":"Return the cumulative product of array elements over a given axis treating Not a Numbers (NaNs) as one.","signature":"nancumprod(x, axis[, dtype, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nancumprod"},{"name":"nancumsum","description":"Return the cumulative sum of array elements over a given axis treating Not a Numbers (NaNs) as zero.","signature":"nancumsum(x, axis[, dtype, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nancumsum"},{"name":"nanmax","description":"Return the maximum of an array or maximum along an axis, ignoring any NaNs.","signature":"nanmax(a[, axis, keepdims, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanmax"},{"name":"nanmean","description":"Compute the arithmetic mean along the specified axis, ignoring NaNs.","signature":"nanmean(a[, axis, dtype, keepdims, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanmean"},{"name":"nanmedian","description":"Compute the median along the specified axis, while ignoring NaNs.","signature":"nanmedian(a[, axis, keepdims, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanmedian"},{"name":"nanmin","description":"Return minimum of an array or minimum along an axis, ignoring any NaNs.","signature":"nanmin(a[, axis, keepdims, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanmin"},{"name":"nanprod","description":"Return the product of array elements over a given axis treating Not a Numbers (NaNs) as ones.","signature":"nanprod(a[, axis, dtype, keepdims, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanprod"},{"name":"nanstd","description":"Compute the standard deviation along the specified axis, while ignoring NaNs.","signature":"nanstd(a[, axis, dtype, keepdims, ddof, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanstd"},{"name":"nansum","description":"Return the sum of array elements over a given axis treating Not a Numbers (NaNs) as zero.","signature":"nansum(a[, axis, dtype, keepdims, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nansum"},{"name":"nanvar","description":"Compute the variance along the specified axis, while ignoring NaNs.","signature":"nanvar(a[, axis, dtype, keepdims, ddof, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nanvar"},{"name":"nextafter","description":"This docstring was copied from numpy.nextafter.","signature":"nextafter(x1, x2, /[, out, where, casting, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nextafter"},{"name":"nonzero","description":"Return the indices of the elements that are non-zero.","signature":"nonzero(a)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.nonzero"},{"name":"normalize_chunks","description":"Normalize chunks to tuple of tuples","signature":"normalize_chunks(chunks[, shape, limit, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.core.normalize_chunks"},{"name":"notnull","description":"pandas.notnull for dask arrays","signature":"notnull(values)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.notnull"},{"name":"ones","description":"Blocked variant of ones","signature":"ones(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ones"},{"name":"ones_like","description":"Return an array of ones with the same shape and type as a given array.","signature":"ones_like(a[, dtype, chunks])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ones_like"},{"name":"outer","description":"Compute the outer product of two vectors.","signature":"outer(a, b)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.outer"},{"name":"overlap.map_overlap","description":"Map a function over blocks of the array with some overlap","signature":"overlap.map_overlap(x, func, depth[, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.overlap.map_overlap"},{"name":"overlap.overlap","description":"Share boundaries between neighboring blocks","signature":"overlap.overlap(x, depth, boundary)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.overlap.overlap"},{"name":"overlap.trim_internal","description":"Trim sides from each block","signature":"overlap.trim_internal(x, axes[, boundary])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.overlap.trim_internal"},{"name":"overlap.trim_overlap","description":"Trim sides from each block.","signature":"overlap.trim_overlap(x, depth[, boundary])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.overlap.trim_overlap"},{"name":"pad","description":"Pad an array.","signature":"pad(array, pad_width, mode, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.pad"},{"name":"percentile","description":"Approximate percentile of 1-D array","signature":"percentile(a, q[, interpolation, method])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.percentile"},{"name":"piecewise","description":"Evaluate a piecewise-defined function.","signature":"piecewise(x, condlist, funclist, *args, **kw)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.piecewise"},{"name":"prod","description":"Return the product of array elements over a given axis.","signature":"prod(a[, axis, dtype, keepdims, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.prod"},{"name":"ptp","description":"Range of values (maximum - minimum) along an axis.","signature":"ptp(a[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ptp"},{"name":"rad2deg","description":"This docstring was copied from numpy.rad2deg.","signature":"rad2deg(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.rad2deg"},{"name":"radians","description":"This docstring was copied from numpy.radians.","signature":"radians(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.radians"},{"name":"random.beta","description":"This docstring was copied from numpy.random.mtrand.RandomState.beta.","signature":"random.beta(a, b[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.beta"},{"name":"random.binomial","description":"This docstring was copied from numpy.random.mtrand.RandomState.binomial.","signature":"random.binomial(n, p[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.binomial"},{"name":"random.chisquare","description":"This docstring was copied from numpy.random.mtrand.RandomState.chisquare.","signature":"random.chisquare(df[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.chisquare"},{"name":"random.choice","description":"This docstring was copied from numpy.random.mtrand.RandomState.choice.","signature":"random.choice(a[, size, replace, p])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.choice"},{"name":"random.exponential","description":"This docstring was copied from numpy.random.mtrand.RandomState.exponential.","signature":"random.exponential([scale, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.exponential"},{"name":"random.f","description":"This docstring was copied from numpy.random.mtrand.RandomState.f.","signature":"random.f(dfnum, dfden[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.f"},{"name":"random.gamma","description":"This docstring was copied from numpy.random.mtrand.RandomState.gamma.","signature":"random.gamma(shape[, scale, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.gamma"},{"name":"random.geometric","description":"This docstring was copied from numpy.random.mtrand.RandomState.geometric.","signature":"random.geometric(p[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.geometric"},{"name":"random.gumbel","description":"This docstring was copied from numpy.random.mtrand.RandomState.gumbel.","signature":"random.gumbel([loc, scale, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.gumbel"},{"name":"random.hypergeometric","description":"This docstring was copied from numpy.random.mtrand.RandomState.hypergeometric.","signature":"random.hypergeometric(ngood, nbad, nsample)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.hypergeometric"},{"name":"random.laplace","description":"This docstring was copied from numpy.random.mtrand.RandomState.laplace.","signature":"random.laplace([loc, scale, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.laplace"},{"name":"random.logistic","description":"This docstring was copied from numpy.random.mtrand.RandomState.logistic.","signature":"random.logistic([loc, scale, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.logistic"},{"name":"random.lognormal","description":"This docstring was copied from numpy.random.mtrand.RandomState.lognormal.","signature":"random.lognormal([mean, sigma, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.lognormal"},{"name":"random.logseries","description":"This docstring was copied from numpy.random.mtrand.RandomState.logseries.","signature":"random.logseries(p[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.logseries"},{"name":"random.negative_binomial","description":"This docstring was copied from numpy.random.mtrand.RandomState.negative_binomial.","signature":"random.negative_binomial(n, p[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.negative_binomial"},{"name":"random.noncentral_chisquare","description":"This docstring was copied from numpy.random.mtrand.RandomState.noncentral_chisquare.","signature":"random.noncentral_chisquare(df, nonc[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.noncentral_chisquare"},{"name":"random.noncentral_f","description":"This docstring was copied from numpy.random.mtrand.RandomState.noncentral_f.","signature":"random.noncentral_f(dfnum, dfden, nonc[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.noncentral_f"},{"name":"random.normal","description":"This docstring was copied from numpy.random.mtrand.RandomState.normal.","signature":"random.normal([loc, scale, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.normal"},{"name":"random.pareto","description":"This docstring was copied from numpy.random.mtrand.RandomState.pareto.","signature":"random.pareto(a[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.pareto"},{"name":"random.poisson","description":"This docstring was copied from numpy.random.mtrand.RandomState.poisson.","signature":"random.poisson([lam, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.poisson"},{"name":"random.power","description":"This docstring was copied from numpy.random.mtrand.RandomState.power.","signature":"random.power(a[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.power"},{"name":"random.randint","description":"This docstring was copied from numpy.random.mtrand.RandomState.randint.","signature":"random.randint(low[, high, size, dtype])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.randint"},{"name":"random.random","description":"This docstring was copied from numpy.random.mtrand.RandomState.random_sample.","signature":"random.random([size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.random"},{"name":"random.random_sample","description":"This docstring was copied from numpy.random.mtrand.RandomState.random_sample.","signature":"random.random_sample([size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.random_sample"},{"name":"random.rayleigh","description":"This docstring was copied from numpy.random.mtrand.RandomState.rayleigh.","signature":"random.rayleigh([scale, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.rayleigh"},{"name":"random.standard_cauchy","description":"This docstring was copied from numpy.random.mtrand.RandomState.standard_cauchy.","signature":"random.standard_cauchy([size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.standard_cauchy"},{"name":"random.standard_exponential","description":"This docstring was copied from numpy.random.mtrand.RandomState.standard_exponential.","signature":"random.standard_exponential([size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.standard_exponential"},{"name":"random.standard_gamma","description":"This docstring was copied from numpy.random.mtrand.RandomState.standard_gamma.","signature":"random.standard_gamma(shape[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.standard_gamma"},{"name":"random.standard_normal","description":"This docstring was copied from numpy.random.mtrand.RandomState.standard_normal.","signature":"random.standard_normal([size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.standard_normal"},{"name":"random.standard_t","description":"This docstring was copied from numpy.random.mtrand.RandomState.standard_t.","signature":"random.standard_t(df[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.standard_t"},{"name":"random.triangular","description":"This docstring was copied from numpy.random.mtrand.RandomState.triangular.","signature":"random.triangular(left, mode, right[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.triangular"},{"name":"random.uniform","description":"This docstring was copied from numpy.random.mtrand.RandomState.uniform.","signature":"random.uniform([low, high, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.uniform"},{"name":"random.vonmises","description":"This docstring was copied from numpy.random.mtrand.RandomState.vonmises.","signature":"random.vonmises(mu, kappa[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.vonmises"},{"name":"random.wald","description":"This docstring was copied from numpy.random.mtrand.RandomState.wald.","signature":"random.wald(mean, scale[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.wald"},{"name":"random.weibull","description":"This docstring was copied from numpy.random.mtrand.RandomState.weibull.","signature":"random.weibull(a[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.weibull"},{"name":"random.zipf","description":"Standard distributions","signature":"random.zipf(a[, size])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.random.zipf"},{"name":"ravel","description":"Return a contiguous flattened array.","signature":"ravel(array)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.ravel"},{"name":"real","description":"Return the real part of the complex argument.","signature":"real(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.real"},{"name":"rechunk","description":"Convert blocks in dask array x for new chunks.","signature":"rechunk(x[, chunks, threshold, block_size_limit])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.rechunk"},{"name":"reduction","description":"General version of reductions","signature":"reduction(x, chunk, aggregate[, axis, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.reduction"},{"name":"repeat","description":"Repeat elements of an array.","signature":"repeat(a, repeats[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.repeat"},{"name":"reshape","description":"Reshape array to new shape","signature":"reshape(x, shape)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.reshape"},{"name":"result_type","description":"This docstring was copied from numpy.result_type.","signature":"result_type(*arrays_and_dtypes)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.result_type"},{"name":"rint","description":"This docstring was copied from numpy.rint.","signature":"rint(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.rint"},{"name":"roll","description":"Roll array elements along a given axis.","signature":"roll(array, shift[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.roll"},{"name":"rollaxis","description":"","signature":"rollaxis(a, axis[, start])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.rollaxis"},{"name":"round","description":"Round an array to the given number of decimals.","signature":"round(a[, decimals])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.round"},{"name":"sign","description":"This docstring was copied from numpy.sign.","signature":"sign(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.sign"},{"name":"signbit","description":"This docstring was copied from numpy.signbit.","signature":"signbit(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.signbit"},{"name":"sin","description":"This docstring was copied from numpy.sin.","signature":"sin(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.sin"},{"name":"sinh","description":"This docstring was copied from numpy.sinh.","signature":"sinh(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.sinh"},{"name":"sqrt","description":"This docstring was copied from numpy.sqrt.","signature":"sqrt(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.sqrt"},{"name":"square","description":"This docstring was copied from numpy.square.","signature":"square(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.square"},{"name":"squeeze","description":"Remove single-dimensional entries from the shape of an array.","signature":"squeeze(a[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.squeeze"},{"name":"stack","description":"Stack arrays along a new axis","signature":"stack(seq[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stack"},{"name":"stats.chisquare","description":"Calculate a one-way chi-square test.","signature":"stats.chisquare(f_obs[, f_exp, ddof, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.chisquare"},{"name":"stats.f_oneway","description":"Perform one-way ANOVA.","signature":"stats.f_oneway(*args)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.f_oneway"},{"name":"stats.kurtosis","description":"Compute the kurtosis (Fisher or Pearson) of a dataset.","signature":"stats.kurtosis(a[, axis, fisher, bias, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.kurtosis"},{"name":"stats.kurtosistest","description":"Test whether a dataset has normal kurtosis.","signature":"stats.kurtosistest(a[, axis, nan_policy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.kurtosistest"},{"name":"stats.moment","description":"Calculate the nth moment about the mean for a sample.","signature":"stats.moment(a[, moment, axis, nan_policy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.moment"},{"name":"stats.normaltest","description":"Test whether a sample differs from a normal distribution.","signature":"stats.normaltest(a[, axis, nan_policy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.normaltest"},{"name":"stats.power_divergence","description":"Cressie-Read power divergence statistic and goodness of fit test.","signature":"stats.power_divergence(f_obs[, f_exp, ddof, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.power_divergence"},{"name":"stats.skew","description":"Compute the sample skewness of a data set.","signature":"stats.skew(a[, axis, bias, nan_policy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.skew"},{"name":"stats.skewtest","description":"Test whether the skew is different from the normal distribution.","signature":"stats.skewtest(a[, axis, nan_policy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.skewtest"},{"name":"stats.ttest_1samp","description":"Calculate the T-test for the mean of ONE group of scores.","signature":"stats.ttest_1samp(a, popmean[, axis, nan_policy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.ttest_1samp"},{"name":"stats.ttest_ind","description":"Calculate the T-test for the means of two independent samples of scores.","signature":"stats.ttest_ind(a, b[, axis, equal_var])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.ttest_ind"},{"name":"stats.ttest_rel","description":"Calculate the t-test on TWO RELATED samples of scores, a and b.","signature":"stats.ttest_rel(a, b[, axis, nan_policy])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.stats.ttest_rel"},{"name":"std","description":"Compute the standard deviation along the specified axis.","signature":"std(a[, axis, dtype, keepdims, ddof, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.std"},{"name":"store","description":"Store dask arrays in array-like objects, overwrite data in target","signature":"store(sources, targets[, lock, regions, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.store"},{"name":"sum","description":"Sum of array elements over a given axis.","signature":"sum(a[, axis, dtype, keepdims, split_every, out])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.sum"},{"name":"take","description":"Take elements from an array along an axis.","signature":"take(a, indices[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.take"},{"name":"tan","description":"This docstring was copied from numpy.tan.","signature":"tan(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.tan"},{"name":"tanh","description":"This docstring was copied from numpy.tanh.","signature":"tanh(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.tanh"},{"name":"tensordot","description":"Compute tensor dot product along specified axes.","signature":"tensordot(lhs, rhs[, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.tensordot"},{"name":"tile","description":"Construct an array by repeating A the number of times given by reps.","signature":"tile(A, reps)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.tile"},{"name":"to_hdf5","description":"Store arrays in HDF5 file","signature":"to_hdf5(filename, *args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.to_hdf5"},{"name":"to_npy_stack","description":"Write dask array to a stack of .npy files","signature":"to_npy_stack(dirname, x[, axis])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.to_npy_stack"},{"name":"to_tiledb","description":"Save array to the TileDB storage format","signature":"to_tiledb(darray, uri[, compute, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.to_tiledb"},{"name":"to_zarr","description":"Save array to the zarr storage format","signature":"to_zarr(arr, url[, component, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.to_zarr"},{"name":"topk","description":"Extract the k largest elements from a on the given axis, and return them sorted from largest to smallest.","signature":"topk(a, k[, axis, split_every])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.topk"},{"name":"transpose","description":"Permute the dimensions of an array.","signature":"transpose(a[, axes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.transpose"},{"name":"tril","description":"Lower triangle of an array with elements above the k-th diagonal zeroed.","signature":"tril(m[, k])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.tril"},{"name":"triu","description":"Upper triangle of an array with elements below the k-th diagonal zeroed.","signature":"triu(m[, k])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.triu"},{"name":"trunc","description":"This docstring was copied from numpy.trunc.","signature":"trunc(x, /[, out, where, casting, order, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.trunc"},{"name":"unique","description":"Find the unique elements of an array.","signature":"unique(ar[, return_index, return_inverse, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.unique"},{"name":"unravel_index","description":"This docstring was copied from numpy.unravel_index.","signature":"unravel_index(indices, shape[, order])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.unravel_index"},{"name":"var","description":"Compute the variance along the specified axis.","signature":"var(a[, axis, dtype, keepdims, ddof, …])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.var"},{"name":"vdot","description":"This docstring was copied from numpy.vdot.","signature":"vdot(a, b)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.vdot"},{"name":"vstack","description":"Stack arrays in sequence vertically (row wise).","signature":"vstack(tup[, allow_unknown_chunksizes])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.vstack"},{"name":"where","description":"This docstring was copied from numpy.where.","signature":"where(condition, [x, y])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.where"},{"name":"zeros","description":"Blocked variant of zeros","signature":"zeros(*args, **kwargs)","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.zeros"},{"name":"zeros_like","description":"Return an array of zeros with the same shape and type as a given array.","signature":"zeros_like(a[, dtype, chunks])","url":"https://docs.dask.org/en/latest/array-api.html#dask.array.zeros_like"}]