name,numpy
"torch.abs","numpy.absolute"
"torch.acos","numpy.arccos"
"torch.add","numpy.add"
"torch.addbmm",""
"torch.addcdiv",""
"torch.addcmul",""
"torch.addmm",""
"torch.addmv",""
"torch.addr",""
"torch.allclose","numpy.allclose"
"torch.angle","numpy.angle"
"torch.arange","numpy.arange"
"torch.argmax","numpy.argmax"
"torch.argmin","numpy.argmin"
"torch.argsort","numpy.argsort"
"torch.as_strided",""
"torch.as_tensor",""
"torch.asin","numpy.arcsin"
"torch.atan","numpy.arctan"
"torch.atan2","numpy.arctan2"
"torch.baddbmm",""
"torch.bartlett_window","numpy.bartlett"
"torch.bernoulli","numpy.random.bernoulli"
"torch.bincount","numpy.bincount"
"torch.bitwise_and","numpy.bitwise_and"
"torch.bitwise_not",""
"torch.bitwise_or","numpy.bitwise_or"
"torch.bitwise_xor","numpy.bitwise_xor"
"torch.blackman_window","numpy.blackman"
"torch.bmm",""
"torch.broadcast_tensors","numpy.broadcast_arrays"
"torch.can_cast","numpy.can_cast"
"torch.cartesian_prod",""
"torch.cat","numpy.concatenate"
"torch.cdist","numpy.linalg.norm"
"torch.ceil","numpy.ceil"
"torch.chain_matmul","numpy.matmul"
"torch.cholesky","numpy.linalg.cholesky"
"torch.cholesky_inverse",""
"torch.cholesky_solve",""
"torch.chunk",""
"torch.clamp",""
"torch.combinations",""
"torch.compiled_with_cxx11_abi",""
"torch.conj","numpy.conj"
"torch.cos","numpy.cos"
"torch.cosh","numpy.cosh"
"torch.cross","numpy.cross"
"torch.cummax",""
"torch.cummin",""
"torch.cumprod","numpy.cumprod"
"torch.cumsum","numpy.cumsum"
"torch.det","numpy.linalg.det"
"torch.diag","numpy.diag"
"torch.diag_embed",""
"torch.diagflat","numpy.diagflat"
"torch.diagonal","numpy.diagonal"
"torch.digamma",""
"torch.dist","numpy.linalg.norm"
"torch.div","numpy.divide"
"torch.dot","numpy.dot"
"torch.eig","numpy.linalg.eig"
"torch.einsum","numpy.einsum"
"torch.empty","numpy.empty"
"torch.empty_like","numpy.empty_like"
"torch.empty_strided",""
"torch.eq","numpy.equal"
"torch.equal",""
"torch.erf",""
"torch.erfc",""
"torch.erfinv",""
"torch.exp","numpy.exp"
"torch.expm1","numpy.expm1"
"torch.eye","numpy.eye"
"torch.fft","numpy.fft.fft"
"torch.flatten",""
"torch.flip","numpy.flip"
"torch.floor","numpy.floor"
"torch.floor_divide","numpy.floor_divide"
"torch.fmod","numpy.fmod"
"torch.frac",""
"torch.from_numpy",""
"torch.full","numpy.full"
"torch.full_like","numpy.full_like"
"torch.gather",""
"torch.ge","numpy.greater_equal"
"torch.geqrf",""
"torch.ger",""
"torch.get_default_dtype",""
"torch.get_rng_state",""
"torch.gt","numpy.greater"
"torch.hamming_window","numpy.hamming"
"torch.hann_window","numpy.hanning"
"torch.histc","numpy.histogram"
"torch.ifft","numpy.fft.ifft"
"torch.imag","numpy.imag"
"torch.index_select",""
"torch.initial_seed",""
"torch.inverse","numpy.linalg.inv"
"torch.irfft","numpy.fft.irfft"
"torch.is_complex","numpy.iscomplex"
"torch.is_floating_point","numpy.isreal"
"torch.is_storage",""
"torch.is_tensor",""
"torch.isfinite","numpy.isfinite"
"torch.isinf","numpy.isinf"
"torch.isnan","numpy.isnan"
"torch.kthvalue",""
"torch.le","numpy.less_equal"
"torch.lerp",""
"torch.lgamma",""
"torch.linspace","numpy.linspace"
"torch.lobpcg",""
"torch.log","numpy.log"
"torch.log10","numpy.log10"
"torch.log1p","numpy.log1p"
"torch.log2","numpy.log2"
"torch.logdet",""
"torch.logical_and","numpy.logical_and"
"torch.logical_not","numpy.logical_not"
"torch.logical_or","numpy.logical_or"
"torch.logical_xor","numpy.logical_xor"
"torch.logspace","numpy.logspace"
"torch.logsumexp","numpy.logaddexp"
"torch.lstsq","numpy.linalg.lstsq"
"torch.lt","numpy.less"
"torch.lu",""
"torch.lu_solve",""
"torch.lu_unpack",""
"torch.manual_seed",""
"torch.masked_select","numpy.ma.masked_where"
"torch.matmul","numpy.matmul"
"torch.matrix_power","numpy.linalg.matrix_power"
"torch.matrix_rank","numpy.linalg.matrix_rank"
"torch.max","numpy.maximum"
"torch.mean","numpy.mean"
"torch.median","numpy.median"
"torch.meshgrid","numpy.meshgrid"
"torch.min","numpy.minimum"
"torch.mm","numpy.matmul"
"torch.mode",""
"torch.mul","numpy.multiply"
"torch.multinomial",""
"torch.mv",""
"torch.mvlgamma",""
"torch.narrow",""
"torch.ne","numpy.not_equal"
"torch.neg","numpy.negative"
"torch.nonzero","numpy.nonzero"
"torch.norm","numpy.linalg.norm"
"torch.normal","numpy.random.normal"
"torch.numel",""
"torch.ones","numpy.ones"
"torch.ones_like","numpy.ones_like"
"torch.orgqr",""
"torch.ormqr",""
"torch.pca_lowrank",""
"torch.pinverse",""
"torch.poisson","numpy.random.poisson"
"torch.polygamma",""
"torch.pow","numpy.power"
"torch.prod","numpy.prod"
"torch.promote_types","numpy.promote_types"
"torch.qr","numpy.linalg.qr"
"torch.quantize_per_channel",""
"torch.quantize_per_tensor",""
"torch.rand","numpy.random.random"
"torch.rand_like",""
"torch.randint","numpy.random.randint"
"torch.randint_like",""
"torch.randn","numpy.random.randn"
"torch.randn_like",""
"torch.randperm","numpy.random.permutations"
"torch.range","numpy.arange"
"torch.real","numpy.real"
"torch.reciprocal",""
"torch.remainder","numpy.remainder"
"torch.renorm",""
"torch.repeat_interleave",""
"torch.reshape","numpy.reshape"
"torch.result_type","numpy.result_type"
"torch.rfft","numpy.fft.rfft"
"torch.roll","numpy.roll"
"torch.rot90","numpy.rot90"
"torch.round","numpy.round_"
"torch.rsqrt",""
"torch.seed",""
"torch.set_default_dtype",""
"torch.set_default_tensor_type",""
"torch.set_flush_denormal",""
"torch.set_printoptions",""
"torch.set_rng_state",""
"torch.sigmoid",""
"torch.sign","numpy.sign"
"torch.sin","numpy.sin"
"torch.sinh","numpy.sinh"
"torch.slogdet","numpy.linalg.slogdet"
"torch.solve","numpy.linalg.solve"
"torch.sort","numpy.sort"
"torch.sparse_coo_tensor",""
"torch.split","numpy.split"
"torch.sqrt","numpy.sqrt"
"torch.square","numpy.square"
"torch.squeeze","numpy.squeeze"
"torch.stack","numpy.stack"
"torch.std","numpy.std"
"torch.std_mean",""
"torch.stft",""
"torch.sum","numpy.sum"
"torch.svd","numpy.linalg.svd"
"torch.svd_lowrank",""
"torch.symeig","numpy.linalg.eigvalsh"
"torch.t","numpy.transpose"
"torch.take","numpy.take"
"torch.tan","numpy.tan"
"torch.tanh","numpy.tanh"
"torch.tensor","numpy.array"
"torch.tensordot","numpy.tensordot"
"torch.topk",""
"torch.trace","numpy.trace"
"torch.transpose","numpy.transpose"
"torch.trapz","numpy.trapz"
"torch.triangular_solve",""
"torch.tril","numpy.tril"
"torch.tril_indices","numpy.tril_indices"
"torch.triu","numpy.triu"
"torch.triu_indices","numpy.triu_indices"
"torch.true_divide","numpy.true_divide"
"torch.trunc","numpy.trunc"
"torch.unbind",""
"torch.unique","numpy.unique"
"torch.unique_consecutive",""
"torch.unsqueeze","numpy.expand_dims"
"torch.var","numpy.var"
"torch.var_mean",""
"torch.where","numpy.where"
"torch.zeros","numpy.zeros"
"torch.zeros_like","numpy.zeros_like"
