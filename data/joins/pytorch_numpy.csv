name,numpy
"torch._assert",""
"torch.abs","numpy.absolute"
"torch.absolute","numpy.absolute"
"torch.acos","numpy.arccos"
"torch.acosh","numpy.arccosh"
"torch.add","numpy.add"
"torch.addbmm",""
"torch.addcdiv",""
"torch.addcmul",""
"torch.addmm",""
"torch.addmv",""
"torch.addr",""
"torch.all","numpy.all"
"torch.allclose","numpy.allclose"
"torch.amax","numpy.amax"
"torch.amin","numpy.amin"
"torch.angle","numpy.angle"
"torch.any","numpy.any"
"torch.arange","numpy.arange"
"torch.arccos","numpy.arccos"
"torch.arccosh","numpy.arccosh"
"torch.arcsin","numpy.arcsin"
"torch.arcsinh","numpy.arcsinh"
"torch.arctan","numpy.arctan"
"torch.arctanh","numpy.arctanh"
"torch.are_deterministic_algorithms_enabled",""
"torch.argmax","numpy.argmax"
"torch.argmin","numpy.argmin"
"torch.argsort","numpy.argsort"
"torch.as_strided",""
"torch.as_tensor",""
"torch.asin","numpy.arcsin"
"torch.asinh","numpy.arcsinh"
"torch.atan","numpy.arctan"
"torch.atan2","numpy.arctan2"
"torch.atanh","numpy.arctanh"
"torch.atleast_1d","numpy.atleast_1d"
"torch.atleast_2d","numpy.atleast_2d"
"torch.atleast_3d","numpy.atleast_3d"
"torch.baddbmm",""
"torch.bartlett_window","numpy.bartlett"
"torch.bernoulli","numpy.random.bernoulli"
"torch.bincount","numpy.bincount"
"torch.bitwise_and","numpy.bitwise_and"
"torch.bitwise_not",""
"torch.bitwise_or","numpy.bitwise_or"
"torch.bitwise_xor","numpy.bitwise_xor"
"torch.blackman_window","numpy.blackman"
"torch.block_diag","numpy.block"
"torch.bmm",""
"torch.broadcast_shapes","numpy.broadcast_shapes"
"torch.broadcast_tensors","numpy.broadcast_arrays"
"torch.broadcast_to","numpy.broadcast_to"
"torch.bucketize",""
"torch.can_cast","numpy.can_cast"
"torch.cartesian_prod",""
"torch.cat","numpy.concatenate"
"torch.cdist","numpy.linalg.norm"
"torch.ceil","numpy.ceil"
"torch.chain_matmul","numpy.matmul"
"torch.cholesky","numpy.linalg.cholesky"
"torch.cholesky_inverse",""
"torch.cholesky_solve",""
"torch.chunk",""
"torch.clamp",""
"torch.clip","numpy.clip"
"torch.clone",""
"torch.column_stack","numpy.column_stack"
"torch.combinations",""
"torch.compiled_with_cxx11_abi",""
"torch.complex",""
"torch.conj","numpy.conj"
"torch.copysign","numpy.copysign"
"torch.cos","numpy.cos"
"torch.cosh","numpy.cosh"
"torch.count_nonzero","numpy.count_nonzero"
"torch.cross","numpy.cross"
"torch.cummax",""
"torch.cummin",""
"torch.cumprod","numpy.cumprod"
"torch.cumsum","numpy.cumsum"
"torch.deg2rad","numpy.deg2rad"
"torch.dequantize",""
"torch.det","numpy.linalg.det"
"torch.diag","numpy.diag"
"torch.diag_embed",""
"torch.diagflat","numpy.diagflat"
"torch.diagonal","numpy.diagonal"
"torch.diff","numpy.diff"
"torch.digamma",""
"torch.dist","numpy.linalg.norm"
"torch.div","numpy.divide"
"torch.divide","numpy.divide"
"torch.dot","numpy.dot"
"torch.dstack","numpy.dstack"
"torch.eig","numpy.linalg.eig"
"torch.einsum","numpy.einsum"
"torch.empty","numpy.empty"
"torch.empty_like","numpy.empty_like"
"torch.empty_strided",""
"torch.eq","numpy.equal"
"torch.equal","numpy.equal"
"torch.erf",""
"torch.erfc",""
"torch.erfinv",""
"torch.exp","numpy.exp"
"torch.exp2","numpy.exp2"
"torch.expm1","numpy.expm1"
"torch.eye","numpy.eye"
"torch.fake_quantize_per_channel_affine",""
"torch.fake_quantize_per_tensor_affine",""
"torch.fix","numpy.fix"
"torch.flatten",""
"torch.flip","numpy.flip"
"torch.fliplr","numpy.fliplr"
"torch.flipud","numpy.flipud"
"torch.float_power","numpy.float_power"
"torch.floor","numpy.floor"
"torch.floor_divide","numpy.floor_divide"
"torch.fmax","numpy.fmax"
"torch.fmin","numpy.fmin"
"torch.fmod","numpy.fmod"
"torch.frac",""
"torch.from_numpy",""
"torch.full","numpy.full"
"torch.full_like","numpy.full_like"
"torch.gather",""
"torch.gcd","numpy.gcd"
"torch.ge","numpy.greater_equal"
"torch.geqrf",""
"torch.ger","numpy.outer"
"torch.get_default_dtype",""
"torch.get_rng_state",""
"torch.greater","numpy.greater"
"torch.greater_equal","numpy.greater_equal"
"torch.gt","numpy.greater"
"torch.hamming_window","numpy.hamming"
"torch.hann_window","numpy.hanning"
"torch.heaviside","numpy.heaviside"
"torch.histc","numpy.histogram"
"torch.hstack","numpy.hstack"
"torch.hypot","numpy.hypot"
"torch.i0","numpy.i0"
"torch.igamma",""
"torch.igammac",""
"torch.imag","numpy.imag"
"torch.index_select",""
"torch.initial_seed",""
"torch.inner","numpy.inner"
"torch.inverse","numpy.linalg.inv"
"torch.is_complex","numpy.iscomplex"
"torch.is_floating_point",""
"torch.is_nonzero",""
"torch.is_storage",""
"torch.is_tensor",""
"torch.isclose","numpy.isclose"
"torch.isfinite","numpy.isfinite"
"torch.isinf","numpy.isinf"
"torch.isnan","numpy.isnan"
"torch.isneginf","numpy.isneginf"
"torch.isposinf","numpy.isposinf"
"torch.isreal","numpy.isreal"
"torch.istft",""
"torch.kaiser_window","numpy.kaiser"
"torch.kron","numpy.kron"
"torch.kthvalue",""
"torch.lcm","numpy.lcm"
"torch.ldexp","numpy.ldexp"
"torch.le","numpy.less_equal"
"torch.lerp",""
"torch.less","numpy.less"
"torch.less_equal","numpy.less_equal"
"torch.lgamma",""
"torch.linspace","numpy.linspace"
"torch.lobpcg",""
"torch.log","numpy.log"
"torch.log10","numpy.log10"
"torch.log1p","numpy.log1p"
"torch.log2","numpy.log2"
"torch.logaddexp","numpy.logaddexp"
"torch.logaddexp2","numpy.logaddexp2"
"torch.logcumsumexp",""
"torch.logdet",""
"torch.logical_and","numpy.logical_and"
"torch.logical_not","numpy.logical_not"
"torch.logical_or","numpy.logical_or"
"torch.logical_xor","numpy.logical_xor"
"torch.logit",""
"torch.logspace","numpy.logspace"
"torch.logsumexp","numpy.logsumexp"
"torch.lstsq","numpy.linalg.lstsq"
"torch.lt","numpy.less"
"torch.lu",""
"torch.lu_solve",""
"torch.lu_unpack",""
"torch.manual_seed",""
"torch.masked_select","numpy.ma.masked_where"
"torch.matmul","numpy.matmul"
"torch.matrix_exp",""
"torch.matrix_power","numpy.linalg.matrix_power"
"torch.matrix_rank","numpy.linalg.matrix_rank"
"torch.max","numpy.amax"
"torch.maximum","numpy.maximum"
"torch.mean","numpy.mean"
"torch.median","numpy.median"
"torch.meshgrid","numpy.meshgrid"
"torch.min","numpy.amin"
"torch.minimum","numpy.minimum"
"torch.mm","numpy.matmul"
"torch.mode","numpy.mod"
"torch.moveaxis","numpy.moveaxis"
"torch.movedim","numpy.moveaxis"
"torch.msort","numpy.msort"
"torch.mul","numpy.multiply"
"torch.multinomial",""
"torch.multiply","numpy.multiply"
"torch.mv",""
"torch.mvlgamma",""
"torch.nan_to_num","numpy.nan_to_num"
"torch.nanmedian","numpy.nanmedian"
"torch.nanquantile","numpy.nanquantile"
"torch.nansum","numpy.nansum"
"torch.narrow",""
"torch.ne","numpy.not_equal"
"torch.neg","numpy.negative"
"torch.negative","numpy.negative"
"torch.nextafter","numpy.nextafter"
"torch.nonzero","numpy.nonzero"
"torch.norm","numpy.linalg.norm"
"torch.normal","numpy.random.normal"
"torch.not_equal","numpy.not_equal"
"torch.numel",""
"torch.ones","numpy.ones"
"torch.ones_like","numpy.ones_like"
"torch.orgqr",""
"torch.ormqr",""
"torch.outer","numpy.outer"
"torch.pca_lowrank",""
"torch.pinverse",""
"torch.poisson","numpy.random.poisson"
"torch.polar",""
"torch.polygamma",""
"torch.pow","numpy.power"
"torch.prod","numpy.prod"
"torch.promote_types","numpy.promote_types"
"torch.qr","numpy.linalg.qr"
"torch.quantile","numpy.quantile"
"torch.quantize_per_channel",""
"torch.quantize_per_tensor",""
"torch.rad2deg","numpy.rad2deg"
"torch.rand","numpy.random.rand"
"torch.rand_like",""
"torch.randint","numpy.random.randint"
"torch.randint_like",""
"torch.randn","numpy.random.randn"
"torch.randn_like",""
"torch.randperm","numpy.random.permutations"
"torch.range","numpy.arange"
"torch.ravel","numpy.ravel"
"torch.real","numpy.real"
"torch.reciprocal","numpy.reciprocal"
"torch.remainder","numpy.remainder"
"torch.renorm",""
"torch.repeat_interleave",""
"torch.reshape","numpy.reshape"
"torch.result_type","numpy.result_type"
"torch.roll","numpy.roll"
"torch.rot90","numpy.rot90"
"torch.round","numpy.round_"
"torch.row_stack","numpy.row_stack"
"torch.rsqrt",""
"torch.scatter",""
"torch.scatter_add",""
"torch.searchsorted",""
"torch.seed",""
"torch.set_default_dtype",""
"torch.set_default_tensor_type",""
"torch.set_flush_denormal",""
"torch.set_printoptions",""
"torch.set_rng_state",""
"torch.sgn",""
"torch.sigmoid",""
"torch.sign","numpy.sign"
"torch.signbit",""
"torch.sin","numpy.sin"
"torch.sinc",""
"torch.sinh","numpy.sinh"
"torch.slogdet","numpy.linalg.slogdet"
"torch.solve","numpy.linalg.solve"
"torch.sort","numpy.sort"
"torch.sparse_coo_tensor",""
"torch.split","numpy.split"
"torch.sqrt","numpy.sqrt"
"torch.square","numpy.square"
"torch.squeeze","numpy.squeeze"
"torch.stack","numpy.stack"
"torch.std","numpy.std"
"torch.std_mean",""
"torch.stft",""
"torch.sub",""
"torch.subtract","numpy.subtract"
"torch.sum","numpy.sum"
"torch.svd","numpy.linalg.svd"
"torch.svd_lowrank",""
"torch.swapaxes","numpy.swapaxes"
"torch.swapdims","numpy.swapaxes"
"torch.symeig","numpy.linalg.eigvalsh"
"torch.t","numpy.transpose"
"torch.take","numpy.take"
"torch.tan","numpy.tan"
"torch.tanh","numpy.tanh"
"torch.tensor","numpy.array"
"torch.tensor_split","numpy.array_split"
"torch.tensordot","numpy.tensordot"
"torch.tile","numpy.tile"
"torch.topk",""
"torch.trace","numpy.trace"
"torch.transpose","numpy.transpose"
"torch.trapz","numpy.trapz"
"torch.triangular_solve",""
"torch.tril","numpy.tril"
"torch.tril_indices","numpy.tril_indices"
"torch.triu","numpy.triu"
"torch.triu_indices","numpy.triu_indices"
"torch.true_divide","numpy.true_divide"
"torch.trunc","numpy.trunc"
"torch.unbind",""
"torch.unique","numpy.unique"
"torch.unique_consecutive",""
"torch.unsqueeze","numpy.expand_dims"
"torch.use_deterministic_algorithms",""
"torch.vander","numpy.vander"
"torch.var","numpy.var"
"torch.var_mean",""
"torch.vdot","numpy.vdot"
"torch.view_as_complex",""
"torch.view_as_real",""
"torch.vstack","numpy.vstack"
"torch.where","numpy.where"
"torch.xlogy",""
"torch.zeros","numpy.zeros"
"torch.zeros_like","numpy.zeros_like"
